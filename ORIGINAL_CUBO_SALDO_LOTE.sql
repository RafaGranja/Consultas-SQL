WITH CTE_OC AS (
		SELECT L.IDLOTE,T.*,TI.NSEQITMMOV FROM (
		SELECT CODCOLIGADA,IDLOTE,MIN(IDMOV) IDMOV
		FROM DBO.TITMLOTEPRD L
		GROUP BY CODCOLIGADA,IDLOTE
		) L
		INNER JOIN TITMLOTEPRD L2 ON
		L.CODCOLIGADA=L2.CODCOLIGADA
		AND L.IDLOTE=L2.IDLOTE
		AND L.IDMOV=L2.IDMOV
		INNER JOIN TITMMOV TI ON
		L2.CODCOLIGADA=TI.CODCOLIGADA
		AND L2.IDMOV=TI.IDMOV
		AND L2.NSEQITMMOV=TI.NSEQITMMOV
		INNER JOIN TMOV T ON
		T.CODCOLIGADA=TI.CODCOLIGADA
		AND T.IDMOV=TI.IDMOV
		UNION ALL 
		SELECT C.IDLOTE,T.*,TI.NSEQITMMOV FROM CTE_OC C
		INNER JOIN TITMMOVRELAC R ON
		C.CODCOLIGADA=R.CODCOLDESTINO
		AND C.IDMOV=R.IDMOVDESTINO
		AND C.NSEQITMMOV=R.NSEQITMMOVDESTINO
		INNER JOIN TITMMOV TI ON
		R.CODCOLORIGEM=TI.CODCOLIGADA
		AND R.IDMOVORIGEM=TI.IDMOV
		AND R.NSEQITMMOVORIGEM=TI.NSEQITMMOV
		INNER JOIN TMOV T ON
		T.CODCOLIGADA=TI.CODCOLIGADA
		AND T.IDMOV=TI.IDMOV
	)
	,
CTE_Y AS (	
	SELECT MAX(SEQUENCIAL) SEQ,
            R.IDLOTE,
            R.CODLOC,
            R.CODCOLIGADA,
            R.CODFILIAL
    FROM   TRELSLDLOTE R (NOLOCK)
    WHERE  R.CODCOLIGADA = 1
            AND R.CODFILIAL = 7
            AND R.DATAMOVIMENTO <= GETDATE()
            AND R.QTDEENTRADA IS NOT NULL
    GROUP  BY R.CODCOLIGADA,
                R.CODFILIAL,
                R.IDLOTE,
                R.CODLOC
)
SELECT  
TS.IDMOV                                                       AS IDMOV_ORIGEM_SALDO,
       (SELECT CODTMV
        FROM   TMOV (NOLOCK)
        WHERE  CODCOLIGADA = 1
               AND IDMOV = TS.IDMOV)                                  AS MOV_ORIGEM_SALDO,
       P.IDPRD                                                        AS IDPRD2,
       TS.IDLOTE                                                      AS LOTE,
       CASE
         WHEN TS.DATAMOVIMENTO > TC.RECMODIFIEDON THEN TS.DATAMOVIMENTO
         ELSE ISNULL(TC.RECMODIFIEDON, Getdate())
       END                                                            AS DATA_SALDO,
       CASE
         WHEN TS.DATAMOVIMENTO > TC.RECMODIFIEDON THEN ISNULL(TS.SALDOMOV, 0)
         ELSE ISNULL(TC.SALDOFISICO2, 0)
       END                                                            AS SALDOMOV,
TS.SEQUENCIAL                                                  AS SEQ,
TS.CODLOC                                                      AS CODLOC_SALDO,
Y.IDLOTE LOTE2,
Y.SEQ SEQ,
Y.CODLOC  CODLOC_LOTE,
NF1.IDMOV IDMOV_NF,
NF1.NUMEROMOV NUM_NF,
NF1.CODTMV CODTMV_NF,
NF1.CODCCUSTO CCUSTO_NF,
CC2.NOME DESCR_CCUSTO_NF,
NF1.CODCFO CFO_NF,
F2.NOMEFANTASIA FORNEC_NF,
NV1.NOME EMITENTE_NF,
NV2.NOME REQUISITANTE_NF,
NF1.HORARIOEMISSAO DT_EMISSAO_NF,
NF1.IDMOV 'IDMOV_1.2.08',
NF1.CODTMV 'CODTMV_1.2.08',
NF1.NUMEROMOV 'NUM_1.2.08',
OC.CODTMV CODTMV_OC,
OC.NUMEROMOV NUM_OC,
OC.CODCCUSTO CCUSTO_OC,
CC.NOME DESCR_CCUSTO_OC,
OC.CODVEN1,
OC.CODVEN2,
OC.CODCFO CFO_OC,
F.NOMEFANTASIA FORNEC_OC,
TV1.NOME COMPRADOR_OC,
TV2.NOME REQUISITANTE_OC,
OC.HORARIOEMISSAO DT_EMISSAO_OC,
CASE
    WHEN LCL.DATA_RETIFICADA IS NOT NULL THEN ( CONVERT(VARCHAR(10), LCL.DATA_RETIFICADA, 103) )
    WHEN L.DATAVALIDADE IS NULL
        AND LCL.DATA_VALIDADE IS NULL
        AND LCL.DATA_RETIFICADA IS NULL THEN ( CONVERT(VARCHAR(10), LCL.DATA_VALIDADE_B, 103) )
    WHEN L.DATAVALIDADE IS NULL
        AND LCL.DATA_VALIDADE_B IS NULL
        AND LCL.DATA_RETIFICADA IS NULL THEN ( CONVERT(VARCHAR(10), LCL.DATA_VALIDADE, 103) )
    ELSE ( CONVERT(VARCHAR(10), L.DATAVALIDADE, 103) )
END                                                            AS DATA_VALIDA,
DATEDIFF(DAY, GETDATE(), L.DATAVALIDADE) DIAS_A_VENCER,
( CONVERT(VARCHAR(10), LCL.DATA_VALIDADE, 103) ) VALIDADE_COMP_A,
( CONVERT(VARCHAR(10), LCL.DATA_VALIDADE_B, 103) ) VALIDADE_COMP_B,
LCL.LOCALIZACAO_LOTE,
P.CAMPOLIVRE2 LOCALIZACAO_PRODUTO_F8,
P.CAMPOLIVRE3 LOCALIZACAO_PRODUTO_F7,
LS.DESCRICAO STATUS_LOTE,
FORMAT(L.DATAENTRADA, 'dd-MM-yyyy') DTA_ENTRADA_LOTE,
L.NUMLOTE NUM_LOTE,
P.CODIGOPRD PRODUTO,
P.DESCRICAO DESC_PRODUTO,
P.CODUNDCONTROLE UND,
L.CODCFO CFO_LOTE,
P.CODTB2FAT '2A_CLASSIF',
P.CODTB1FAT '1A_CLASSIF'
FROM TLOTEPRD (NOLOCK) L
INNER JOIN TLOTEPRDCOMPL (NOLOCK) LCL ON
LCL.CODCOLIGADA=L.CODCOLIGADA
AND LCL.IDLOTE=L.IDLOTE
INNER JOIN TSTATUSLOTEPRD (NOLOCK) LS ON
LS.IDSTATUS=L.IDSTATUS
INNER JOIN TPRD (NOLOCK) P ON
L.CODCOLIGADA=P.CODCOLIGADA
AND L.IDPRD=P.IDPRD
INNER JOIN CTE_OC OC ON
OC.CODCOLIGADA=L.CODCOLIGADA
AND OC.IDLOTE=L.IDLOTE
AND OC.CODTMV LIKE '1.1%' 
AND OC.SERIE='OC'
LEFT JOIN TVEN (NOLOCK) TV1 ON
TV1.CODCOLIGADA=OC.CODCOLIGADA
AND TV1.CODVEN=OC.CODVEN1
LEFT JOIN TVEN (NOLOCK) TV2 ON
TV2.CODCOLIGADA=OC.CODCOLIGADA
AND TV2.CODVEN=OC.CODVEN2
LEFT JOIN FCFO (NOLOCK) F ON
F.CODCOLIGADA=OC.CODCOLIGADA
AND F.CODCFO=OC.CODCFO
LEFT JOIN GCCUSTO (NOLOCK) CC ON
CC.CODCOLIGADA=OC.CODCOLIGADA
AND CC.CODCCUSTO=OC.CODCCUSTO
LEFT JOIN CTE_OC NF1 ON
NF1.CODCOLIGADA=L.CODCOLIGADA
AND NF1.IDLOTE=L.IDLOTE
AND NF1.CODTMV = '1.2.08' 
LEFT JOIN TVEN (NOLOCK) NV1 ON
NV1.CODCOLIGADA=NF1.CODCOLIGADA
AND NV1.CODVEN=NF1.CODVEN1
LEFT JOIN TVEN (NOLOCK) NV2 ON
NV2.CODCOLIGADA=NF1.CODCOLIGADA
AND NV2.CODVEN=NF1.CODVEN2
LEFT JOIN FCFO (NOLOCK) F2 ON
F2.CODCOLIGADA=NF1.CODCOLIGADA
AND F2.CODCFO=NF1.CODCFO
LEFT JOIN GCCUSTO (NOLOCK) CC2 ON
CC2.CODCOLIGADA=NF1.CODCOLIGADA
AND CC2.CODCCUSTO=NF1.CODCCUSTO
LEFT JOIN CTE_Y Y ON
L.CODCOLIGADA = Y.CODCOLIGADA
AND L.IDLOTE = Y.IDLOTE
LEFT JOIN TRELSLDLOTE TS (NOLOCK) ON
TS.CODCOLIGADA = L.CODCOLIGADA
AND TS.IDLOTE = Y.IDLOTE
AND TS.SEQUENCIAL = Y.SEQ
AND TS.CODLOC = Y.CODLOC
AND TS.SALDOMOV <> 0
LEFT JOIN TLOTEPRDLOC (NOLOCK) TC ON 
L.CODCOLIGADA = TC.CODCOLIGADA
AND L.IDLOTE = TC.IDLOTE
AND TC.SALDOFISICO2 <> 0
WHERE ( OC.CODTMV IN ( '1.1.02', '1.1.32', '1.1.15' )
        OR OC.CODTMV LIKE ( '1.2.%' )
        OR OC.CODTMV LIKE ( '1.1.08' )
           AND OC.CODTMV NOT IN ( '1.2.23' ) )
           AND L.NUMLOTE LIKE :NUMERO_LOTE
           AND L.IDSTATUS LIKE :COD_STATUS
           AND P.CODIGOPRD LIKE :PRODUTO