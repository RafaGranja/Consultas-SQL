USE [CORPORE]
GO
/****** Object:  Trigger [dbo].[T_DELP_ATUALIZA_PROJECAO_BSCINT_2]    Script Date: 20/12/2024 07:24:08 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- AUTHOR:		rafael.granja
-- CREATE DATE: 19/12/2023
-- DESCRIPTION:	atualiza projetado de tarefas quando ocorre um apontamento
-- =============================================
ALTER TRIGGER [dbo].[T_DELP_ATUALIZA_PROJECAO_BSCINT_2]
   ON  [dbo].[TITMLOTEPRD]
   AFTER INSERT,DELETE,UPDATE
AS 
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
	SET NOCOUNT ON;

    -- INSERT STATEMENTS FOR TRIGGER HERE

	BEGIN TRY
		IF EXISTS(
			
			SELECT DISTINCT T.CODTMV FROM INSERTED I
			INNER JOIN TMOV T ON
			T.CODCOLIGADA=I.CODCOLIGADA
			AND T.IDMOV=I.IDMOV
			INNER JOIN TITMMOV TI ON
			TI.CODCOLIGADA=I.CODCOLIGADA
			AND TI.IDMOV=I.IDMOV
			AND TI.NSEQITMMOV=I.NSEQITMMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=TI.IDPRD
			WHERE (T.CODTMV LIKE '2.2.%' AND PP.TIPO='P') 
		
			UNION 
		
			SELECT DISTINCT T.CODTMV FROM DELETED I
			INNER JOIN TMOV T ON
			T.CODCOLIGADA=I.CODCOLIGADA
			AND T.IDMOV=I.IDMOV
			INNER JOIN TITMMOV TI ON
			TI.CODCOLIGADA=I.CODCOLIGADA
			AND TI.IDMOV=I.IDMOV
			AND TI.NSEQITMMOV=I.NSEQITMMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=TI.IDPRD
			WHERE (T.CODTMV LIKE '2.2.%' AND PP.TIPO='P') 

		)
		BEGIN

		
			SELECT TRF.*,TIL.QUANTIDADE2 QUANTIDADE,(((TI.VALORLIQUIDO-ISNULL(IMP.VALORIMPOSTOS,0))/TI.QUANTIDADEORIGINAL)*TIL.QUANTIDADE2) VALOR INTO #CTE
			FROM  INSERTED TIL 
			INNER JOIN TITMMOV TI ON
			TI.CODCOLIGADA=TIL.CODCOLIGADA
			AND TI.IDMOV=TIL.IDMOV
			AND TIL.NSEQITMMOV=TI.NSEQITMMOV
			INNER JOIN TMOV T ON
			TIL.CODCOLIGADA=T.CODCOLIGADA
			AND TIL.IDMOV=T.IDMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			CROSS APPLY DBO.FN_DELP_RETORNA_LOTE_CCUSTO(TIL.CODCOLIGADA,TIL.IDLOTE,DEFAULT) I
			CROSS APPLY DBO.FN_DELP_RETORNA_TAREFA_MOVIMENTO(TIL.CODCOLIGADA,I.IDMOV_OC,I.NSEQITMMOV) TRF
			CROSS APPLY DBO.FN_DELP_RETORNA_VALOR_IMPOSTO_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) IMP
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=TI.IDPRD
			AND TRF.IDPRD=PP.IDPRD
			WHERE T.CODTMV LIKE '2.2.%' AND PP.TIPO='P' AND T.CODCOLIGADA=1  AND ISNULL(T.STATUS,'')!='C' AND ISNULL(TI.STATUS,'')!='C'
			UNION 
			SELECT TRF.*,TIL.QUANTIDADE2*-1 QUANTIDADE,(((TI.VALORLIQUIDO-ISNULL(IMP.VALORIMPOSTOS,0))/TI.QUANTIDADEORIGINAL)*TIL.QUANTIDADE2)*-1 VALOR
			FROM  DELETED TIL 
			INNER JOIN TITMMOV TI ON
			TI.CODCOLIGADA=TIL.CODCOLIGADA
			AND TI.IDMOV=TIL.IDMOV
			AND TIL.NSEQITMMOV=TI.NSEQITMMOV
			INNER JOIN TMOV T ON
			TIL.CODCOLIGADA=T.CODCOLIGADA
			AND TIL.IDMOV=T.IDMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			CROSS APPLY DBO.FN_DELP_RETORNA_LOTE_CCUSTO(TIL.CODCOLIGADA,TIL.IDLOTE,DEFAULT) I
			CROSS APPLY DBO.FN_DELP_RETORNA_TAREFA_MOVIMENTO(TIL.CODCOLIGADA,I.IDMOV_OC,I.NSEQITMMOV) TRF
			CROSS APPLY DBO.FN_DELP_RETORNA_VALOR_IMPOSTO_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) IMP
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=TI.IDPRD
			AND TRF.IDPRD=PP.IDPRD
			WHERE T.CODTMV LIKE '2.2.%' AND PP.TIPO='P' AND T.CODCOLIGADA=1  AND ISNULL(T.STATUS,'')!='C' AND ISNULL(TI.STATUS,'')!='C'
		
			;WITH CTE2 AS (
			
				SELECT CODCOLIGADA,IDPRJ,CODPRJ,IDTRF,IDPRD,CODTRF,SUM(QUANTIDADE) QUANTIDADE,SUM(VALOR) VALOR,(
				SELECT (SELECT DISTINCT CONCAT(T2.NUMEROMOV,' - ',T2.CODTMV,',')
				FROM INSERTED TI2
					INNER JOIN TITMMOV TI3 ON
					TI2.CODCOLIGADA=TI3.CODCOLIGADA
					AND TI2.IDMOV=TI3.IDMOV
					AND TI2.NSEQITMMOV=TI3.NSEQITMMOV
					INNER JOIN TMOV T2 ON
					TI3.CODCOLIGADA=T2.CODCOLIGADA
					AND TI3.IDMOV=T2.IDMOV
					WHERE ISNULL(T2.STATUS,'')!='C' AND ISNULL(TI3.STATUS,'')!='C'
				UNION 			
				SELECT DISTINCT CONCAT(T2.NUMEROMOV,' - ',T2.CODTMV,',') 
				FROM DELETED TI2
					INNER JOIN TITMMOV TI3 ON
					TI2.CODCOLIGADA=TI3.CODCOLIGADA
					AND TI2.IDMOV=TI3.IDMOV
					INNER JOIN TMOV T2 ON
					TI3.CODCOLIGADA=T2.CODCOLIGADA
					AND TI3.IDMOV=T2.IDMOV
					WHERE ISNULL(T2.STATUS,'')!='C' AND ISNULL(TI3.STATUS,'')!='C')
				FOR XML PATH(''),ELEMENTS ) MOVIMENTOS
				FROM #CTE 
				GROUP BY CODCOLIGADA,IDPRJ,CODPRJ,IDTRF,IDPRD,CODTRF
			)


			INSERT INTO FLUIG.DBO.Z_DELP_PROJECAOPRODUTO(CODCOLIGADA,CODPRJ,IDTRF,IDPRD,PERIODO,VALOR,PRECO,MOTIVO,SEQ,RECCREATEDBY,RECCREATEDON)
			SELECT Z.CODCOLIGADA,Z.CODPRJ,Z.IDTRF,Z.IDPRD,Z.PERIODO,
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN Z.VALOR-C.QUANTIDADE ELSE Z.VALOR END, 
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN Z.PRECO-C.VALOR ELSE Z.PRECO END, 
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN CONCAT(Z.MOTIVO,CHAR(13),CHAR(10),'Movimentos realizados:',C.MOVIMENTOS) ELSE Z.MOTIVO END, 
			(SELECT MAX(SEQ) FROM FLUIG.DBO.Z_DELP_PROJECAOPRODUTO WHERE CODCOLIGADA=Z.CODCOLIGADA AND CODPRJ=Z.CODPRJ AND IDTRF=Z.IDTRF AND IDPRD=Z.IDPRD)+1,
			'fluig',GETDATE()
			FROM
			FLUIG.DBO.Z_DELP_PROJECAOPRODUTO Z 
			INNER JOIN CTE2 C ON
			C.CODCOLIGADA=Z.CODCOLIGADA
			AND C.CODPRJ=Z.CODPRJ COLLATE SQL_LATIN1_GENERAL_CP1_CI_AI
			AND C.IDTRF=Z.IDTRF
			AND C.IDPRD=Z.IDPRD
			WHERE SEQ = (SELECT MAX(SEQ) FROM FLUIG.DBO.Z_DELP_PROJECAOPRODUTO WHERE CODCOLIGADA=Z.CODCOLIGADA AND CODPRJ=Z.CODPRJ AND IDTRF=Z.IDTRF AND IDPRD=Z.IDPRD)

			;WITH CTE3 AS (
			
				SELECT CODCOLIGADA,IDPRJ,CODPRJ,IDTRF,CODTRF,SUM(QUANTIDADE) QUANTIDADE,SUM(VALOR) VALOR,(
				SELECT (SELECT DISTINCT CONCAT(T2.NUMEROMOV,' - ',T2.CODTMV,'')
				FROM INSERTED TI2
					INNER JOIN TITMMOV TI3 ON
					TI2.CODCOLIGADA=TI3.CODCOLIGADA
					AND TI2.IDMOV=TI3.IDMOV
					AND TI2.NSEQITMMOV=TI3.NSEQITMMOV
					INNER JOIN TMOV T2 ON
					TI3.CODCOLIGADA=T2.CODCOLIGADA
					AND TI3.IDMOV=T2.IDMOV
					WHERE ISNULL(T2.STATUS,'')!='C' AND ISNULL(TI3.STATUS,'')!='C'
				UNION 			
				SELECT DISTINCT CONCAT(T2.NUMEROMOV,' - ',T2.CODTMV,'') 
				FROM DELETED TI2
					INNER JOIN TITMMOV TI3 ON
					TI2.CODCOLIGADA=TI3.CODCOLIGADA
					AND TI2.IDMOV=TI3.IDMOV
					INNER JOIN TMOV T2 ON
					TI3.CODCOLIGADA=T2.CODCOLIGADA
					AND TI3.IDMOV=T2.IDMOV
					WHERE ISNULL(T2.STATUS,'')!='C' AND ISNULL(TI3.STATUS,'')!='C') 
				FOR XML PATH(''),ELEMENTS ) MOVIMENTOS
				FROM #CTE 
				GROUP BY CODCOLIGADA,IDPRJ,CODPRJ,IDTRF,CODTRF
			)

			INSERT INTO FLUIG.DBO.Z_DELP_PROJECAOTAREFA(CODCOLIGADA,CODPRJ,IDTRF,PERIODO,VALOR,PRECO,MOTIVO,SEQ,RECCREATEDBY,RECCREATEDON)
			SELECT Z.CODCOLIGADA,Z.CODPRJ,Z.IDTRF,Z.PERIODO,
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN Z.VALOR-C.QUANTIDADE ELSE Z.VALOR END, 
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN Z.PRECO-C.VALOR ELSE Z.PRECO END, 
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN CONCAT(Z.MOTIVO,CHAR(13),CHAR(10),'Movimentos realizados:',C.MOVIMENTOS) ELSE Z.MOTIVO END, 
			(SELECT MAX(SEQ) FROM FLUIG.DBO.Z_DELP_PROJECAOTAREFA WHERE CODCOLIGADA=Z.CODCOLIGADA AND CODPRJ=Z.CODPRJ AND IDTRF=Z.IDTRF)+1,
			'fluig',GETDATE()
			FROM
			FLUIG.DBO.Z_DELP_PROJECAOTAREFA Z 
			INNER JOIN CTE3 C ON
			C.CODCOLIGADA=Z.CODCOLIGADA
			AND C.CODPRJ=Z.CODPRJ COLLATE SQL_LATIN1_GENERAL_CP1_CI_AI
			AND C.IDTRF=Z.IDTRF
			WHERE SEQ = (SELECT MAX(SEQ) FROM FLUIG.DBO.Z_DELP_PROJECAOTAREFA WHERE CODCOLIGADA=Z.CODCOLIGADA AND CODPRJ=Z.CODPRJ AND IDTRF=Z.IDTRF)

			DROP TABLE #CTE


		END
	END TRY
	BEGIN CATCH
		PRINT 'ERRO AO EXECUTAR TRIGGER DE ATUALIZAÇÃO DO BSC'
	END CATCH


END
