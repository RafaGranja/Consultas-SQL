USE [CORPORE]
GO
/****** Object:  StoredProcedure [dbo].[SP_DELP_EDICAOESTRUTURA]    Script Date: 16/10/2024 09:12:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO




ALTER PROCEDURE [dbo].[SP_DELP_EDICAOESTRUTURA] @NUMPROCESSO INT,  @NUM_OS VARCHAR(30)=NULL, @IDCRIACAO INT=NULL
AS
BEGIN
		
	SET NOCOUNT ON;

	SET LOCK_TIMEOUT 300000;  

	DECLARE @CODCOLIGADA INT, @CODFILIAL INT, @IDPRJ INT;

	/**************************************************************************************************************************************************************
		
		ESSA PROCEDURE É EXECUTADA PELO FLUIG VIA DRIVER JDBC DE CONEXÃO, POR ESSE MOTIVO CADA STATEMENTE ( UPDATE,INSERT,DELETE ) DEVE SER INICIADO COM 'BEGIN TRAN'
		E FINALIZADO COM UM COMMIT, CASO CONTRÁRIO É POSSÍVEL QUE A PROCEDURE ENTRE EM LOCK DENTRO DELA MESMA
		TAMBEM EVITE REALIZAR COMANDOS EXEC POIS PODEM CAUSAR LOCKS TAMBÉM

	***************************************************************************************************************************************************************/

	IF @NUM_OS IS NULL
	BEGIN
		SELECT @CODCOLIGADA=CODCOLIGADA,@CODFILIAL=CODFILIAL,@NUM_OS=NUM_OS,@IDPRJ=IDPRJ_OS
		FROM FLUIG.DBO.ML001007 (NOLOCK) WHERE NUMPROCESSO=@NUMPROCESSO
	END
	ELSE
	BEGIN
		SELECT @CODCOLIGADA=CODCOLIGADA,@CODFILIAL=CODFILIAL,@NUM_OS=CODPRJ,@IDPRJ=IDPRJ
		FROM MPRJ (NOLOCK) WHERE CODPRJ=@NUM_OS AND POSICAO IN (1,4)
	END

	/**************************************************************************************************************************************************************
		
		BUSCA PELAS INFORMAÇÕES DA SOLICITAÇÃO DE INTEGRAÇÃO DO FLUIG

	***************************************************************************************************************************************************************/

	-- INICIO DAS ALTERAÇÕES
	IF @NUM_OS IS NULL OR @NUM_OS='' 
	BEGIN
		RAISERROR('PROJETO INVÁLIDO',16,1)
		RETURN
	END

		-- INICIO DAS ALTERAÇÕES
	IF @NUMPROCESSO IS NULL AND @NUM_OS IS NULL AND @IDCRIACAO IS NULL
	BEGIN
		RAISERROR('SOLICITAÇÃO INVÁLIDA',16,1)
		RETURN
	END

	/**************************************************************************************************************************************************************
		
		CASO O NÚMERO DA OS OU O NÚMERO DA SOLICITAÇÃO ESTEJA VAZIO/NULO, UM ERRO SERÁ LANÇADO E A PROCEDURE SERÁ ENCERRADA

	***************************************************************************************************************************************************************/
	
	/**************************************************************************************************************************************************************
		
		ÍNICIO DAS TRATATIVAS DOS ITENS QUE FORAM EXCLUÍDOS DA ESTRUTURA, ESTES ITENS POSSUEM O CAMPO 'ITEMEXCLUSIVO' IGUAL A 2

	***************************************************************************************************************************************************************/
	BEGIN TRAN 

		UPDATE P SET INATIVO = 1, RECMODIFIEDON=GETDATE()
		FROM TPRODUTO P 
			INNER JOIN FLUIG.DBO.Z_CRM_ML001005(NOLOCK) I ON I.IDPRD = P.IDPRD AND I.CODCOLIGADA = P.CODCOLPRD
			LEFT JOIN KITEMORDEM(NOLOCK) K ON K.CODCOLIGADA=P.CODCOLPRD AND K.CODFILIAL=I.CODFILIAL AND K.CODESTRUTURA=P.CODIGOPRD 
		WHERE I.OS = @NUM_OS AND I.ITEMEXCLUSIVO=2 AND K.CODORDEM IS NULL 
		AND NOT EXISTS( SELECT IDPRD FROM FLUIG.DBO.Z_CRM_EX001005 (NOLOCK) WHERE IDPRD=P.IDPRD AND IDCRIACAO!=I.IDCRIACAO UNION SELECT IDPRD FROM FLUIG.DBO.Z_CRM_ML001005 WHERE IDPRD=P.IDPRD AND IDCRIACAO!=I.IDCRIACAO )
		AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) 

	COMMIT

	/**************************************************************************************************************************************************************
		
		DESATIVA OS PRODUTOS CASO AQUELE ITEM TENHA SIDO EXCLUÍDO E NÃO TENHA MAIS NENHUM ITEM COM ESSE PRODUTO EM OUTRAS ESTRUTURAS OU COM OP CRIADA

	***************************************************************************************************************************************************************/

	BEGIN TRAN

		UPDATE P SET STATUSESTR = 0, RECMODIFIEDON=GETDATE()
		FROM KESTRUTURA P 
			INNER JOIN FLUIG.DBO.Z_CRM_ML001005(NOLOCK) I ON I.IDPRD = P.IDPRODUTO AND I.CODCOLIGADA = P.CODCOLIGADA
			LEFT JOIN KITEMORDEM(NOLOCK) K ON K.CODCOLIGADA=P.CODCOLIGADA AND K.CODFILIAL=I.CODFILIAL AND K.CODESTRUTURA=P.CODESTRUTURA
		WHERE I.OS = @NUM_OS AND I.ITEMEXCLUSIVO=2 AND NOT EXISTS( SELECT IDPRD FROM FLUIG.DBO.Z_CRM_EX001005 (NOLOCK) WHERE IDPRD=P.IDPRODUTO AND IDCRIACAO!=I.IDCRIACAO UNION SELECT IDPRD FROM FLUIG.DBO.Z_CRM_ML001005 WHERE IDPRD=P.IDPRODUTO AND IDCRIACAO!=I.IDCRIACAO)
		AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) 

	COMMIT 

	/**************************************************************************************************************************************************************
		
		DESATIVA AS ESTRUTURAS CASO AQUELE ITEM TENHA SIDO EXCLUÍDO E NÃO TENHA MAIS NENHUM ITEM COM ESSE PRODUTO EM OUTRAS ESTRUTURAS OU COM OP CRIADA

	***************************************************************************************************************************************************************/
	
	BEGIN TRAN

		DELETE A FROM FLUIG.DBO.Z_CRM_ML001021 A 
		INNER JOIN FLUIG.DBO.Z_CRM_ML001021 B ON
		A.OSPROCESSO=B.OSPROCESSO
		AND A.IDCRIACAOPROCESSO=B.IDCRIACAOPROCESSO
		AND A.CODATIVIDADE=B.CODATIVIDADE
		AND A.ID!=B.ID
		WHERE A.ID<B.ID AND A.OSPROCESSO=@NUM_OS AND A.IDCRIACAOPROCESSO=ISNULL(@IDCRIACAO,A.IDCRIACAOPROCESSO) 

	COMMIT

	/**************************************************************************************************************************************************************
		
		DELETA ATIVIDADES REPETIDAS DA ESTRUTRA

	***************************************************************************************************************************************************************/	

	BEGIN TRAN

		UPDATE C SET SUBSTITUTOCOMPONENTES=''
		FROM  FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN FLUIG.dbo.Z_CRM_ML001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO 
		WHERE  @NUM_OS = I.OS AND SUBSTITUTOCOMPONENTES='null' AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) 

	COMMIT

	/**************************************************************************************************************************************************************
		
		CORRIGE CAMPO DE COMPONENTES SUBSTITUOS NA PRINCIPAL 

	***************************************************************************************************************************************************************/

	BEGIN TRAN

		UPDATE Z SET CODIGOPRD=NULL,IDPRD=NULL,PRODUTORM=NULL
		FROM FLUIG.DBO.Z_CRM_ML001005 Z WHERE TIPODESENHO IN('NAOMANUFATURADO','INDUSTRIALIZACAO')
		AND ISNULL(CODIGOPRD,'')!=''  AND OS=@NUM_OS AND IDCRIACAO=ISNULL(@IDCRIACAO,IDCRIACAO) 

	COMMIT
	
	/**************************************************************************************************************************************************************
		
		CORRIGE CODIGOPRD DOS NÃO MANUFATURADOS E INDUSTRIALIZADOS

	***************************************************************************************************************************************************************/	

	IF @IDCRIACAO IS NULL 
	BEGIN

		BEGIN TRAN

			DELETE C FROM FLUIG.DBO.Z_CRM_ML001005 (NOLOCK) I
			LEFT JOIN FLUIG.DBO.Z_CRM_ML001019 C ON C.OSCOMPONENTES=I.OS AND C.IDCRIACAOCOMPONENTES=I.IDCRIACAO
			WHERE I.OS=@NUM_OS AND I.ITEMEXCLUSIVO=2  AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) 

		COMMIT

		/**************************************************************************************************************************************************************
		
			DELETA OS COMPONENTES DOS ITENS QUE FORAM EXCLUÍDOS DA ESTRUTRA

		***************************************************************************************************************************************************************/		

		BEGIN TRAN

			DELETE A FROM FLUIG.DBO.Z_CRM_ML001005 (NOLOCK) I
			LEFT JOIN FLUIG.DBO.Z_CRM_ML001021 A ON A.OSPROCESSO=I.OS AND A.IDCRIACAOPROCESSO=I.IDCRIACAO
			WHERE I.OS=@NUM_OS AND I.ITEMEXCLUSIVO=2 AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) 

		COMMIT

		/**************************************************************************************************************************************************************
		
			DELETA AS ATIVIDADES DOS ITENS QUE FORAM EXCLUÍDOS DA ESTRUTRA

		***************************************************************************************************************************************************************/	

		BEGIN TRAN

			DELETE I FROM FLUIG.DBO.Z_CRM_ML001005 I WITH (NOLOCK)
			WHERE OS=@NUM_OS AND ITEMEXCLUSIVO=2 AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) 

		COMMIT

		/**************************************************************************************************************************************************************
		
			DELETA OS ITENS QUE FORAM EXCLUÍDOS DA ESTRUTRA

		***************************************************************************************************************************************************************/	

	END

	BEGIN TRAN

		UPDATE Z SET ITEMDERETORNO=NULL FROM FLUIG.DBO.Z_CRM_ML001005 Z
		LEFT JOIN FLUIG.DBO.Z_CRM_ML001005 R ON
		Z.CODCOLIGADA=R.CODCOLIGADA
		AND Z.CODFILIAL=R.CODFILIAL
		AND Z.OS=R.OS
		AND Z.ITEMDERETORNO=R.IDCRIACAO
		WHERE R.IDCRIACAO IS NULL AND Z.ITEMDERETORNO !='' AND Z.ITEMDERETORNO IS NOT NULL

	COMMIT

	/**************************************************************************************************************************************************************
		
		LIMPA ITENS DE RETORNO EXCLUÍDOS

	***************************************************************************************************************************************************************/	

	IF @IDCRIACAO IS NULL
	BEGIN
		EXEC FLUIG.DBO.SP_DELP_REINDEXAPRINCIPAL @NUM_OS
	END

	/**************************************************************************************************************************************************************
		
		ATUALIZA A INFORMAÇÃO DE INDICE E NÍVEL DA ESTRUTURA BASEADO NA INFORMAÇÃO DE IDCRIACAO E IDCRIACAOPAI;
		ATUALIZA A INFORMAÇÃO DE CODTRFPAI DE TODOS OS ITENS DA ESTRUTURA, BASEANDO NO INDICE PARA BUSCAR O ITEM PAI PRINCIPAL 

	***************************************************************************************************************************************************************/
	
	BEGIN TRAN 

		UPDATE P SET  P.INVENTARIOFISCAL = 1, P.TIPOTRIBUTACAO = 0, P.CODCOLCONTA = @CODCOLIGADA,
					P.SITUACAOMERCADORIA = CASE LEFT(I.CODIGOPRD,2) 
													WHEN '04' THEN '04' 
													WHEN '03' THEN '03'
													ELSE '02'  END, 
					P.CODCONTA = CASE WHEN LEFT(I.CODIGOPRD,2) = '04' THEN '1.1.3.01.0003' ELSE  '1.1.3.01.0004' END 
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN TPRDFISCAL P ON P.CODCOLIGADA = I.CODCOLIGADA AND I.IDPRD = P.IDPRD 
		WHERE I.OS = @NUM_OS AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) ;

	COMMIT

	/**************************************************************************************************************************************************************
		
		ATUALIZA OS DADOS FISCAIS DOS PRODUTOS EXISTENTES DAQUELA OS

	***************************************************************************************************************************************************************/	

	BEGIN TRAN 

		UPDATE P SET P.DESCRICAO = ISNULL(I.DESCRICAO,'')+' - '+ISNULL(I.POSICAODESENHO,'')+' - '+ISNULL(I.NUMDESENHO,''), 
						P.NOMEFANTASIA =  LEFT(ISNULL(I.DESCRICAO,'')+' - '+ISNULL(I.POSICAODESENHO,'')+' - '+ISNULL(I.NUMDESENHO,''),120)
		FROM  FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I
			INNER JOIN TPRODUTO P ON P.CODCOLPRD = 1 AND I.IDPRD = P.IDPRD
		WHERE I.OS = @NUM_OS AND LEFT(P.CODIGOPRD,2)!='04' AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);

	COMMIT

	/**************************************************************************************************************************************************************
		
		ATUALIZA A DESCRIÇÃO DOS PRODUTOS DAQUELA OS, BASEADO NA ESTRUTURA DO FLUIG, EXCETO OS PRODUTOS ACABADOS, O CÓDIGO DELES INICIA COM 04

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		UPDATE P SET P.NUMNOFABRIC = I.CODIGOPRD
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN TPRODUTODEF P ON P.CODCOLIGADA = 1 AND I.IDPRD = P.IDPRD
		WHERE  I.OS = @NUM_OS  AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);

	COMMIT

	/**************************************************************************************************************************************************************
		
		ATUALIZA O NUMERO DO FABRICANTE DO PRODUTO PARA SER IGUAL AO CÓDIGO DO PRODUTO

	***************************************************************************************************************************************************************/

	IF @IDCRIACAO IS NULL
	BEGIN 
		BEGIN TRAN 

			UPDATE B SET B.FILA=A.FILA, B.CONFIGURACAO=A.CONFIGURACAO, 
			B.PROCESSAMENTO=A.PROCESSAMENTO , B.DESAGREGACAO=A.DESAGREGACAO, 
			B.ESPERA=A.ESPERA, B.MOVIMENTACAO=A.MOVIMENTACAO, 
			B.MINUTOSGASTOS=A.MINUTOSGASTOS
			FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) A 
			INNER JOIN FLUIG.dbo.Z_CRM_EX001021 (NOLOCK) B ON
			A.OSPROCESSO=B.OSPROCESSO
			AND A.IDCRIACAOPROCESSO=B.IDCRIACAOPROCESSO
			AND A.CODATIVIDADE=B.CODATIVIDADE
			INNER JOIN FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) C ON 
			C.OS=B.OSPROCESSO
			AND C.IDCRIACAO=B.IDCRIACAOPROCESSO
			AND C.EXECUCAO=B.EXECUCAO
			INNER JOIN KITEMORDEM (NOLOCK) K ON
			K.CODCOLIGADA=C.CODCOLIGADA
			AND K.CODFILIAL=C.CODFILIAL
			AND K.CODESTRUTURA=C.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
			INNER JOIN KORDEM (NOLOCK) KO 
			ON K.CODCOLIGADA=KO.CODCOLIGADA 
			AND K.CODFILIAL=KO.CODFILIAL 
			AND K.CODORDEM=KO.CODORDEM
			INNER JOIN KORDEMCOMPL (NOLOCK) KL ON
			KL.CODCOLIGADA=K.CODCOLIGADA
			AND KL.CODFILIAL=K.CODFILIAL
			AND KL.CODORDEM=K.CODORDEM
			AND KL.NUMEXEC=C.EXECUCAO
			INNER JOIN KATVORDEM (NOLOCK) KA ON
			KA.CODCOLIGADA=K.CODCOLIGADA
			AND KA.CODFILIAL=K.CODFILIAL
			AND KA.CODORDEM=K.CODORDEM
			AND KA.CODATIVIDADE=B.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
			WHERE A.MINUTOSGASTOS!=B.MINUTOSGASTOS AND KA.STATUS NOT IN (5,6) AND C.OS=@NUM_OS AND ISNULL(KO.REPROCESSAMENTO,0)!=1

		COMMIT
	END

	/**************************************************************************************************************************************************************
		
		ATUALIZA O TEMPO NA EXECUÇÃO DAS ATIVIDADES NÃO CONCLUÍDAS BASEADO NA ESTRUTURA PRINCIPAL, EXECETO OP'S DE REPROCESSAMENTO

	***************************************************************************************************************************************************************/

	DECLARE @CODCOLIGADA_EST INT,@CODIGOPRD_EST VARCHAR(30),@CODTIPO_EST VARCHAR(1),@IDPRODUTO_EST INT,@QTDLOTE_EST INT, @STATUSESTR_EST INT, @CODCCUSTO_EST VARCHAR(25),
	@IDFASE_EST INT,@FASEVALIDADA_EST INT, @CODIGOULTALTERACAO_EST INT, @VALIDACAOSOLICITADA_EST INT, @CODFILIAL_EST INT, @IDCRIACAO_EST INT,@ORDENACAO_EST HIERARCHYID
	 
	DECLARE ITENS_EST CURSOR FOR 

		SELECT DISTINCT I.CODCOLIGADA, I.CODIGOPRD, CASE WHEN LEFT(I.CODIGOPRD,2) = '04' THEN 'A' ELSE 'S' END, I.IDPRD, I.DESQTDE*10000, 1, I.OS, 1, 1, 0, 0, I.CODFILIAL,I.IDCRIACAO,CAST('/' + REPLACE(I.INDICE, '.', '/') + '/' AS HIERARCHYID) ORDENACAO
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			LEFT JOIN KESTRUTURA E ON I.CODCOLIGADA = E.CODCOLIGADA AND I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = E.CODESTRUTURA AND E.CODFILIAL = I.CODFILIAL
			INNER JOIN FLUIG.dbo.Z_CRM_ML001021 A ON A.OSPROCESSO=I.OS AND A.IDCRIACAOPROCESSO=I.IDCRIACAO
			LEFT JOIN (
				SELECT  I.*
				FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) E ON I.OS = E.OS AND I.IDCRIACAO = E.IDCRIACAOPAI
				WHERE  I.OS = @NUM_OS AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND E.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND ISNULL(E.ITEMDERETORNO,0)=0 AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)
		
				UNION
					-- CODIGOS NÃO MANUFATURADO
				SELECT P.*
				FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
					INNER JOIN FLUIG.dbo.Z_CRM_ML001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO
					INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) P ON I.OS = P.OS AND I.IDCRIACAOPAI = P.IDCRIACAO
				WHERE  ISNULL(SUBSTITUTOCOMPONENTES,'') = '' AND  I.OS = @NUM_OS  AND I.TIPODESENHO = 'NAOMANUFATURADO' AND P.IDCRIACAO=ISNULL(@IDCRIACAO,P.IDCRIACAO)

				UNION
					-- COMPONENTES
				SELECT I.*
				FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
					INNER JOIN FLUIG.dbo.Z_CRM_ML001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO
				WHERE  ISNULL(SUBSTITUTOCOMPONENTES,'') = '' AND  I.OS = @NUM_OS  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)

			) C ON C.OS=I.OS AND C.IDCRIACAO=I.IDCRIACAO
		WHERE E.CODESTRUTURA IS NULL AND I.OS = @NUM_OS AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND I.IDPRD IS NOT NULL AND I.IDPRD!='' AND (C.IDCRIACAO IS NOT NULL OR I.OS LIKE '%.60.%' OR I.OS LIKE '%.80.%' OR I.OS IN ('3.07905.32.001'))  
		AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)
		ORDER BY CAST('/' + REPLACE(I.INDICE, '.', '/') + '/' AS HIERARCHYID) DESC

	OPEN ITENS_EST

	FETCH NEXT FROM ITENS_EST INTO @CODCOLIGADA_EST,@CODIGOPRD_EST,@CODTIPO_EST,@IDPRODUTO_EST,@QTDLOTE_EST, @STATUSESTR_EST, @CODCCUSTO_EST,
	@IDFASE_EST,@FASEVALIDADA_EST, @CODIGOULTALTERACAO_EST, @VALIDACAOSOLICITADA_EST, @CODFILIAL_EST,@IDCRIACAO_EST,@ORDENACAO_EST

	WHILE @@FETCH_STATUS = 0 
	BEGIN

		BEGIN TRAN 	

			IF NOT EXISTS(  -- NÃO EXISTE ITEM FILHO SEM ESTRUTURA
					
				SELECT DISTINCT I.IDCRIACAO
				FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				LEFT JOIN KESTRUTURA E ON I.CODCOLIGADA = E.CODCOLIGADA AND I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = E.CODESTRUTURA AND E.CODFILIAL = I.CODFILIAL
				WHERE I.CODCOLIGADA=@CODCOLIGADA AND I.CODFILIAL=@CODFILIAL AND I.OS=@NUM_OS AND I.IDCRIACAOPAI=@IDCRIACAO_EST AND E.CODESTRUTURA IS NULL AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO')


			) AND NOT EXISTS ( -- NÃO EXISTE ITEM FILHO NÃO MANUFATURADO COM PENDENCIA 
				
				SELECT DISTINCT I.IDCRIACAO
				FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				INNER JOIN FLUIG.DBO.Z_DELP_PENDNAOMANUFATURADO_OS E ON I.CODCOLIGADA = E.CODCOLIGADA AND I.OS=E.OS AND I.IDCRIACAO=E.IDCRIACAO
				WHERE I.CODCOLIGADA=@CODCOLIGADA AND I.CODFILIAL=@CODFILIAL AND I.OS=@NUM_OS AND I.IDCRIACAOPAI=@IDCRIACAO_EST 
			) AND NOT EXISTS ( -- NÃO EXISTE ITEM FILHO INDUSTRIALIZADO COM PENDENCIA 
				
				SELECT DISTINCT I.IDCRIACAO
				FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				INNER JOIN FLUIG.DBO.Z_DELP_PENDINDUSTRIALIZADO_OS E ON I.CODCOLIGADA = E.CODCOLIGADA AND I.OS=E.OS AND I.IDCRIACAO=E.IDCRIACAO
				WHERE I.CODCOLIGADA=@CODCOLIGADA AND I.CODFILIAL=@CODFILIAL AND I.OS=@NUM_OS AND I.IDCRIACAOPAI=@IDCRIACAO_EST 
			)

			BEGIN

				INSERT INTO KESTRUTURA (CODCOLIGADA, CODESTRUTURA, CODTIPO, IDPRODUTO, QTDLOTE, STATUSESTR, CODCCUSTO, IDFASE, FASEVALIDADA, CODIGOULTALTERACAO, VALIDACAOSOLICITADA, CODFILIAL, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
					VALUES (@CODCOLIGADA_EST,@CODIGOPRD_EST,@CODTIPO_EST,@IDPRODUTO_EST,@QTDLOTE_EST, @STATUSESTR_EST, @CODCCUSTO_EST,
					@IDFASE_EST,@FASEVALIDADA_EST, @CODIGOULTALTERACAO_EST, @VALIDACAOSOLICITADA_EST, @CODFILIAL_EST, 'fluig', GETDATE(),'fluig', GETDATE())

			END

		COMMIT 

		FETCH NEXT FROM ITENS_EST INTO @CODCOLIGADA_EST,@CODIGOPRD_EST,@CODTIPO_EST,@IDPRODUTO_EST,@QTDLOTE_EST, @STATUSESTR_EST, @CODCCUSTO_EST,
			@IDFASE_EST,@FASEVALIDADA_EST, @CODIGOULTALTERACAO_EST, @VALIDACAOSOLICITADA_EST, @CODFILIAL_EST,@IDCRIACAO_EST,@ORDENACAO_EST

	END
	CLOSE ITENS_EST;
	DEALLOCATE ITENS_EST;

	/**************************************************************************************************************************************************************
		
		INSERE AS ESTRUTURAS DE FABRICAÇÃO DO PROEJTO CASO AINDA NÃO EXISTAM E SEGUINDO AS REGRAS:
			- ITEM DEVE SER DO TIPODESENHO : SEMIACABADO OU ACABADO
			- ITEM DEVE POSSUIR ATIVIDADES CADASTRADAS 
			- ITEM DEVE POSSUIR COMPONENTES OU FILHOS ( EXCETO PROJETOS .60., .80., E EXCEÇÕES )

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		UPDATE E  SET CODTIPO = CASE WHEN LEFT(I.CODIGOPRD,2) = '04' THEN 'A' ELSE 'S' END, QTDLOTE = ISNULL(I.DESQTDE,1)*10000, STATUSESTR= 1,  RECMODIFIEDON = GETDATE()
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN KESTRUTURA E ON I.CODCOLIGADA = E.CODCOLIGADA AND I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = E.CODESTRUTURA AND E.CODFILIAL = I.CODFILIAL
		WHERE I.OS = @NUM_OS  AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO');

	COMMIT

	/**************************************************************************************************************************************************************
		
		ATUALIZA AS INFORMAÇÕES DAS ESTRUTURAS JÁ CADASTRADAS ANTERIORMENTE

	***************************************************************************************************************************************************************/

	BEGIN TRAN 		

		INSERT INTO KLINHAEST (CODCOLIGADA, CODLINHA, CODESTRUTURA, CODFILIAL, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
		SELECT DISTINCT I.CODCOLIGADA, '001', I.CODIGOPRD, I.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN KESTRUTURA K ON I.CODCOLIGADA = K.CODCOLIGADA AND I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = K.CODESTRUTURA AND K.CODFILIAL = I.CODFILIAL
			LEFT JOIN KLINHAEST E ON I.CODCOLIGADA = E.CODCOLIGADA AND I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = E.CODESTRUTURA AND E.CODFILIAL = I.CODFILIAL
		WHERE  E.CODESTRUTURA IS NULL AND I.OS = @NUM_OS  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') 
		AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)

	COMMIT

	/**************************************************************************************************************************************************************
		
		INSERE AS INFORMAÇÕES DA LINHA DE PRODUÇÃO DAS ESTRUTURAS CASO NÃO EXISTAM

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		INSERT INTO KESTRUTURACOMPL (CODCOLIGADA, CODESTRUTURA, CODFILIAL, ELABORADOR2, ELABORADOR3, ELABORADOR, CAMDESENHO, NUMREVISAO, POSICAO, BITOLA, LARGURA, COMPRIMENTO, PESOBRUTO, PESOLIQUIDO, ESPECIFICACAOROSCA , RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
		SELECT		DISTINCT				 I.CODCOLIGADA, I.CODIGOPRD, I.CODFILIAL, NULL ELABORADOR2, NULL ELABORADOR3, NULL ELABORADOR, 
								CASE WHEN I.NUMDESENHO = '' THEN NULL ELSE I.NUMDESENHO END, 
								CASE WHEN I.REVISAODESENHO = '' THEN NULL ELSE I.REVISAODESENHO END, 
								CASE WHEN I.POSICAODESENHO = '' THEN NULL ELSE I.POSICAODESENHO END, 
								CAST( CASE WHEN I.BITOLA = '' OR I.BITOLA = 'null' THEN NULL ELSE REPLACE(I.BITOLA,',','.') END AS FLOAT), 
								CAST( CASE WHEN I.LARGURA = '' OR I.LARGURA = 'null' THEN NULL ELSE REPLACE(I.LARGURA,',','.') END AS FLOAT),
								CAST( CASE WHEN I.COMPRIMENTO = '' OR I.COMPRIMENTO = 'null' THEN NULL ELSE REPLACE(I.COMPRIMENTO,',','.') END AS FLOAT), 
								CAST( CASE WHEN I.PESOBRUTO = '' OR I.PESOBRUTO = 'null' THEN NULL ELSE REPLACE(I.PESOBRUTO,',','.') END AS FLOAT), 
								CAST( CASE WHEN I.PESOLIQUIDO = '' OR I.PESOLIQUIDO = 'null' THEN NULL ELSE REPLACE(I.PESOLIQUIDO,',','.') END AS FLOAT), 
								CASE WHEN I.ESPROSCA = '' OR I.ESPROSCA = 'null' THEN NULL ELSE I.ESPROSCA END, 'fluig', GETDATE(),'fluig', GETDATE() 
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 			
			INNER JOIN KESTRUTURA K ON I.CODCOLIGADA = K.CODCOLIGADA AND I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = K.CODESTRUTURA AND K.CODFILIAL = I.CODFILIAL
			LEFT JOIN KESTRUTURACOMPL KL ON KL.CODCOLIGADA = 1 AND KL.CODFILIAL = K.CODFILIAL AND KL.CODESTRUTURA = K.CODESTRUTURA 
		WHERE KL.CODESTRUTURA IS NULL
		AND		I.OS = @NUM_OS  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') 
		 AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)

	COMMIT

	/**************************************************************************************************************************************************************
		
		INSERE AS INFORMAÇÕES COMPLEMENTARES DA ESTRUTURA DE FABRICAÇÃO CASO NÃO EXISTAM

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		UPDATE K SET	CAMDESENHO =	CASE WHEN I.NUMDESENHO = '' THEN NULL ELSE I.NUMDESENHO END, 
						NUMREVISAO =		CASE WHEN I.REVISAODESENHO = '' THEN NULL ELSE I.REVISAODESENHO END, 
						POSICAO    =		CASE WHEN I.POSICAODESENHO = '' THEN NULL ELSE I.POSICAODESENHO END, 
						BITOLA     =		CAST( CASE WHEN I.BITOLA = '' THEN NULL ELSE REPLACE(I.BITOLA,',','.') END AS FLOAT), 
						LARGURA    =		CAST( CASE WHEN I.LARGURA = '' THEN NULL ELSE REPLACE(I.LARGURA,',','.') END AS FLOAT),
						COMPRIMENTO=		CAST( CASE WHEN I.COMPRIMENTO = '' THEN NULL ELSE REPLACE(I.COMPRIMENTO,',','.') END AS FLOAT), 
						PESOBRUTO  =		CAST( CASE WHEN I.PESOBRUTO = '' THEN NULL ELSE REPLACE(I.PESOBRUTO,',','.') END AS FLOAT), 
						PESOLIQUIDO=		CAST( CASE WHEN I.PESOLIQUIDO = '' THEN NULL ELSE REPLACE(I.PESOLIQUIDO,',','.') END AS FLOAT), 
						ESPECIFICACAOROSCA=		CASE WHEN I.ESPROSCA = '' THEN NULL ELSE I.ESPROSCA END, 
						RECMODIFIEDON = GETDATE() 
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN KESTRUTURACOMPL K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE I.OS = @NUM_OS AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO) AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO');

	COMMIT

	/**************************************************************************************************************************************************************
		
		ATUALIZA AS INFORMAÇÕES COMPLEMENTARES DAS ESTRUTURA DE FABRICAÇÃO 

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		DELETE K
		FROM  FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				INNER JOIN KATVESTRUTURACOMPL K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL  AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE I.OS = @NUM_OS AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);

	COMMIT

	/**************************************************************************************************************************************************************
		
		DELETA AS INFORMAÇÕES COMPLEMENTARES DAS ATIVIDADES DA ESTRUTURA PARA SEREM RECRIADAS

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		DELETE K
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I
				INNER JOIN KATVESTPOSTO K ON K.CODCOLIGADA = 1 AND K.CODFILIAL = I.CODFILIAL  AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE I.OS = @NUM_OS AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);

	COMMIT

	/**************************************************************************************************************************************************************
		 
		DELETA AS INFORMAÇÕES DE POSTO DAS ATIVIDADES DA ESTRUTURA PARA SEREM RECRIADAS

	***************************************************************************************************************************************************************/

	BEGIN TRAN 		
		
		DELETE K
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				INNER JOIN KCOMPSUBSTITUTO K ON K.CODCOLIGADA = 1 AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD  COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE I.OS = @NUM_OS AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);

	COMMIT

	/**************************************************************************************************************************************************************
		
		DELETA AS INFORMAÇÕES DE COMPONENTES SUBSTITUTOS DA ESTRUTURA PARA SEREM RECRIADAS

	***************************************************************************************************************************************************************/

	BEGIN TRAN 		
		
		DELETE K
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				INNER JOIN KCOMPONENTECOMPL K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD  COLLATE SQL_Latin1_General_CP1_CI_AI
				INNER JOIN KCOMPONENTE KK ON K.CODCOLIGADA=KK.CODCOLIGADA AND K.CODFILIAL=KK.CODFILIAL AND K.CODESTRUTURA=KK.CODESTRUTURA AND K.IDPRODUTO=KK.IDPRODUTO AND K.CODATIVIDADE=KK.CODATIVIDADE
		WHERE I.OS = @NUM_OS AND I.IDPRD <> '' AND KK.TIPOAGRUPADOR=0 AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);

	COMMIT

	/**************************************************************************************************************************************************************
		
		DELETA AS INFORMAÇÕES COMPLEMENTARES DOS COMPONENTES DA ESTRUTURA PARA SEREM RECRIADAS

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		DELETE K
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I
				INNER JOIN KCOMPONENTE K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD  COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE I.OS = @NUM_OS AND I.IDPRD <> '' AND K.TIPOAGRUPADOR=0 AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);


	COMMIT

	/**************************************************************************************************************************************************************
		
		DELETA AS INFORMAÇÕES DE COMPONENTES DA ESTRUTURA

	***************************************************************************************************************************************************************/

	BEGIN TRAN 		

		DELETE K
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I
				INNER JOIN KATVESTRUTURA K ON K.CODCOLIGADA = 1 AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE I.OS = @NUM_OS AND I.IDPRD <> '' AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);

	COMMIT

	/**************************************************************************************************************************************************************
		
		DELETA AS INFORMAÇÕES DE ATIVIDADES DA ESTRUTURA PARA SEREM RECRIADAS

	***************************************************************************************************************************************************************/

	BEGIN TRAN 
		
		INSERT INTO KATVESTRUTURA
		SELECT DISTINCT I.CODCOLIGADA,  I.CODIGOPRD, C.CODATIVIDADE, 1 HORAS, MIN( CAST(C.PRIORIDADE AS INT) ) ,
		SUM(	CAST( CASE WHEN C.FILA = '' THEN NULL ELSE REPLACE(C.FILA,',','.') END AS FLOAT) ), 
		SUM(	CAST( CASE WHEN C.CONFIGURACAO = '' THEN NULL ELSE REPLACE(C.CONFIGURACAO,',','.') END AS FLOAT) ), 
		SUM(	CAST( CASE WHEN C.PROCESSAMENTO = '' THEN NULL ELSE REPLACE(C.PROCESSAMENTO,',','.') END AS FLOAT)), 
		SUM(	CAST( CASE WHEN C.DESAGREGACAO = '' THEN NULL ELSE REPLACE(C.DESAGREGACAO,',','.') END AS FLOAT)), 
		SUM(	CAST( CASE WHEN C.ESPERA = '' THEN NULL ELSE REPLACE(C.ESPERA,',','.') END AS FLOAT)), 
		SUM(	CAST( CASE WHEN C.MOVIMENTACAO = '' THEN NULL ELSE REPLACE(C.MOVIMENTACAO,',','.') END AS FLOAT)),
			1,0,'P',0,NULL,I.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C ON I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO
			INNER JOIN KATIVIDADE KA ON KA.CODCOLIGADA=I.CODCOLIGADA AND KA.CODFILIAL=I.CODFILIAL AND KA.CODATIVIDADE=C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
			INNER JOIN KESTRUTURA KE ON I.CODCOLIGADA = KE.CODCOLIGADA AND I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = KE.CODESTRUTURA AND KE.CODFILIAL = I.CODFILIAL
			LEFT JOIN KATVESTRUTURA K ON K.CODCOLIGADA = 1 AND K.CODFILIAL = I.CODFILIAL AND K.CODATIVIDADE = C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI  AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE  K.CODATIVIDADE IS NULL
		AND		I.OS = @NUM_OS  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)
		GROUP BY  I.CODCOLIGADA, I.CODIGOPRD, C.CODATIVIDADE,I.CODFILIAL;

	COMMIT

	/**************************************************************************************************************************************************************
		
		INSERE AS INFORMAÇÕES DE ATIVIDADES DA ESTRUTURA CASO ELAS NÃO EXISTAM

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		INSERT INTO  KETPATIVIDADES 
		SELECT DISTINCT I.CODCOLIGADA,'ETP-GLOBAL',C.CODATIVIDADE,I.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C ON I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO
			INNER JOIN KATIVIDADE KA ON KA.CODCOLIGADA=I.CODCOLIGADA AND KA.CODFILIAL=I.CODFILIAL AND KA.CODATIVIDADE=C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
			LEFT JOIN KETPATIVIDADES K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODATIVIDADE = C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE  K.CODATIVIDADE IS NULL
		AND		I.OS = @NUM_OS AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO')  AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)
		GROUP BY  I.CODCOLIGADA, I.CODIGOPRD, C.CODATIVIDADE, I.CODFILIAL

	COMMIT

	/**************************************************************************************************************************************************************
		
		INSERE AS INFORMAÇÕES DE ETAPAS DAS ATIVIDADES DA ESTRUTURA CASO ELAS NÃO EXISTAM

	***************************************************************************************************************************************************************/

	BEGIN TRAN

		INSERT INTO KATVESTRUTURACOMPL (CODCOLIGADA, CODESTRUTURA, CODATIVIDADE,CODFILIAL, DETALHE, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
		SELECT DISTINCT I.CODCOLIGADA,  I.CODIGOPRD, C.CODATIVIDADE, I.CODFILIAL, C.DESCPROCESSO , 'fluig', GETDATE(),'fluig', GETDATE() 
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I
			INNER JOIN FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C ON I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO
			INNER JOIN KATIVIDADE KA ON KA.CODCOLIGADA=I.CODCOLIGADA AND KA.CODFILIAL=I.CODFILIAL AND KA.CODATIVIDADE=C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
			INNER JOIN KATVESTRUTURA KAA ON KAA.CODCOLIGADA = 1 AND KAA.CODFILIAL = I.CODFILIAL AND KAA.CODATIVIDADE = C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI  AND KAA.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
			LEFT JOIN KATVESTRUTURACOMPL K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL  AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI AND C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI = K.CODATIVIDADE
		WHERE K.CODCOLIGADA IS NULL AND I.OS = @NUM_OS AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);
	
	COMMIT

	/**************************************************************************************************************************************************************
		
		INSERE AS INFORMAÇÕES COMPLEMENTARES DAS ATIVIDADES DA ESTRUTURA CASO ELAS NÃO EXISTAM

	***************************************************************************************************************************************************************/

	BEGIN TRAN
			

		INSERT INTO KATVESTPOSTO (CODCOLIGADA, CODPOSTO, CODATIVIDADE, CODESTRUTURA, CODFILIAL, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
		SELECT DISTINCT K.CODCOLIGADA, K.CODPOSTO, C.CODATIVIDADE, I.CODIGOPRD, K.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
		FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C ON I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO
			INNER JOIN KATIVIDADE KA ON KA.CODCOLIGADA=I.CODCOLIGADA AND KA.CODFILIAL=I.CODFILIAL AND KA.CODATIVIDADE=C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
			INNER JOIN KPOSTO (NOLOCK) K ON K.CODCOLIGADA = 1 AND K.CODFILIAL = I.CODFILIAL AND K.CODPOSTO = C.CODPOSTO COLLATE SQL_Latin1_General_CP1_CI_AI
			INNER JOIN KATVESTRUTURA KT ON K.CODCOLIGADA = 1 AND K.CODFILIAL = I.CODFILIAL AND KT.CODATIVIDADE = C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI  AND KT.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
			LEFT JOIN KATVESTPOSTO KP ON KP.CODCOLIGADA = K.CODCOLIGADA AND KP.CODFILIAL = K.CODFILIAL AND KP.CODPOSTO = K.CODPOSTO AND KP.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI AND KP.CODATIVIDADE = C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
		WHERE KP.CODCOLIGADA IS NULL AND I.OS = @NUM_OS AND I.CODIGOPRD <> '' AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO);

	COMMIT

	/**************************************************************************************************************************************************************
		
		INSERE AS INFORMAÇÕES DE POSTO DAS ATIVIDADES DA ESTRUTURA CASO ELAS NÃO EXISTAM

	***************************************************************************************************************************************************************/

	BEGIN TRAN 
		
		INSERT INTO KCOMPONENTE (CODCOLIGADA, CODESTRUTURA, IDPRODUTO, IDAUTOINC, QTDUSADA , CODATIVIDADE, OBRIGASERMATERIAPRIMA, FAZPARTEMODELOBASE, PERMITEEXCLUSAO, CODFILIAL, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON )
		SELECT  DISTINCT COMPONENTES.CODCOLIGADA, CODIGOPRD, IDPRD, (SELECT MAX(IDAUTOINC) FROM KCOMPONENTE)+ ROW_NUMBER () OVER (ORDER BY IDPRD), CAST(QTD AS float)*10000,
					C2.CODATIVIDADE ATIVIDADE,
				1, 0, 0, COMPONENTES.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
		FROM (
			SELECT  I.CODIGOPRD, E.IDPRD,  CASE WHEN E.UNDMEDIDA='KG' THEN CAST(REPLACE(E.PESOUNITARIO,',','.') AS float) ELSE CAST(E.DESQTDE AS float) END QTD, I.NIVEL, I.IDCRIACAO, NULL PRIORIDADE, E.CODFILIAL, I.CODCOLIGADA
			FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
			INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) E ON I.OS = E.OS AND I.IDCRIACAO = E.IDCRIACAOPAI
			WHERE  I.OS = @NUM_OS AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND ISNULL(E.ITEMDERETORNO,0)=0 
			AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)
		
			UNION ALL
		
			SELECT I.CODIGOPRD, C.IDPRDCOMPONENTES IDPRD, CAST(REPLACE(C.QTDEUNCOMPONENTES,',','.') AS FLOAT) QTD, I.NIVEL, I.IDCRIACAO, C.PRIORIDADEATVCOMPONENTES PRIORIDADE, I.CODFILIAL, I.CODCOLIGADA
			FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				INNER JOIN FLUIG.dbo.Z_CRM_ML001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO
			WHERE  ISNULL(SUBSTITUTOCOMPONENTES,'') = '' AND   I.OS = @NUM_OS AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)
			
			UNION ALL

				-- CODIGOS NÃO MANUFATURADO
			SELECT P.CODIGOPRD, C.IDPRDCOMPONENTES IDPRD,  CAST(REPLACE(C.QTDEUNCOMPONENTES,',','.') AS FLOAT) QTD, I.NIVEL, P.IDCRIACAO, C.PRIORIDADEATVCOMPONENTES PRIORIDADE, I.CODFILIAL, I.CODCOLIGADA
			FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
				INNER JOIN FLUIG.dbo.Z_CRM_ML001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO
				INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) P ON I.OS = P.OS AND I.IDCRIACAOPAI = P.IDCRIACAO
			WHERE  ISNULL(SUBSTITUTOCOMPONENTES,'') = '' AND  I.OS = @NUM_OS  AND I.TIPODESENHO = 'NAOMANUFATURADO' AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)

			
		) AS COMPONENTES
		INNER JOIN ( SELECT MIN(PRIORIDADE) PRIORIDADE,CODCOLIGADA,CODESTRUTURA,CODFILIAL FROM KATVESTRUTURA (NOLOCK) GROUP BY CODCOLIGADA,CODESTRUTURA,CODFILIAL )
		C ON C.CODCOLIGADA = COMPONENTES.CODCOLIGADA AND C.CODESTRUTURA = COMPONENTES.CODIGOPRD COLLATE Latin1_General_CI_AS AND C.CODFILIAL = COMPONENTES.CODFILIAL
		INNER JOIN KATVESTRUTURA (NOLOCK) C2 ON C2.CODCOLIGADA = C.CODCOLIGADA AND C2.CODESTRUTURA = C.CODESTRUTURA COLLATE Latin1_General_CI_AS AND C2.CODFILIAL = C.CODFILIAL AND C.PRIORIDADE=CASE WHEN COMPONENTES.PRIORIDADE = 0 THEN C2.PRIORIDADE ELSE COMPONENTES.PRIORIDADE END
		LEFT JOIN KCOMPONENTE KC ON KC.CODCOLIGADA=COMPONENTES.CODCOLIGADA AND KC.CODFILIAL=COMPONENTES.CODFILIAL 
		AND KC.CODESTRUTURA=COMPONENTES.CODIGOPRD COLLATE Latin1_General_CI_AS AND KC.IDPRODUTO=COMPONENTES.IDPRD COLLATE Latin1_General_CI_AS
		AND KC.CODATIVIDADE=C2.CODATIVIDADE COLLATE Latin1_General_CI_AS
		WHERE IDPRD != '' AND KC.CODCOLIGADA IS NULL

	COMMIT

	/**************************************************************************************************************************************************************
		
		INSERE AS INFORMAÇÕES DE COMPONENTES DA ESTRUTURA CASO ELAS NÃO EXISTAM

	***************************************************************************************************************************************************************/

	BEGIN TRAN 

		INSERT INTO  KCOMPSUBSTITUTO
			SELECT DISTINCT SUB.CODCOLIGADA, SUB.CODESTRUTURA, SUB.CODATIVIDADE, SUB.IDAUTOINC, SUB.IDPRD, SUB.IDPRDCOMPONENTES, SUB.QTDUSADA, NULL, NULL, 0,  SUB.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE()
			FROM (
					SELECT 'A' TIPO, I.NIVEL, I.IDCRIACAO, K.CODCOLIGADA, K.CODESTRUTURA, K.CODATIVIDADE, K.IDAUTOINC, P.IDPRD, C.IDPRDCOMPONENTES, K.QTDUSADA, K.CODFILIAL
					FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
						INNER JOIN FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) A ON I.OS = A.OSPROCESSO AND I.IDCRIACAO = A.IDCRIACAOPROCESSO
						INNER JOIN FLUIG.dbo.Z_CRM_ML001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO AND A.PRIORIDADE = C.PRIORIDADEATVCOMPONENTES
						INNER JOIN TPRD (NOLOCK) P ON P.CODCOLIGADA = I.CODCOLIGADA AND P.CODIGOPRD  COLLATE Latin1_General_CI_AS = C.SUBSTITUTOCOMPONENTES
						INNER JOIN KCOMPONENTE (NOLOCK) K ON  P.IDPRD = K.IDPRODUTO 	AND P.CODCOLIGADA = K.CODCOLIGADA AND K.CODESTRUTURA COLLATE Latin1_General_CI_AS = I.CODIGOPRD AND K.CODFILIAL = I.CODFILIAL AND K.CODATIVIDADE COLLATE Latin1_General_CI_AS = A.CODATIVIDADE
						INNER JOIN KESTRUTURA (NOLOCK) E ON K.CODCOLIGADA = E.CODCOLIGADA AND K.CODFILIAL = E.CODFILIAL AND K.CODESTRUTURA = E.CODESTRUTURA AND E.CODCCUSTO COLLATE Latin1_General_CI_AS = I.OS  AND E.RECCREATEDBY = 'fluig'
					WHERE C.PRIORIDADEATVCOMPONENTES <> 0 AND E.STATUSESTR = 1 AND I.OS = @NUM_OS AND ISNULL(C.SUBSTITUTOCOMPONENTES,'') <> '' AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)
		
			UNION ALL

					SELECT 'B' TIPO, I.NIVEL, I.IDCRIACAO,  K.CODCOLIGADA, K.CODESTRUTURA, K.CODATIVIDADE, K.IDAUTOINC, P.IDPRD, C.IDPRDCOMPONENTES, K.QTDUSADA, K.CODFILIAL
					FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
						INNER JOIN KESTRUTURA (NOLOCK) E ON I.CODCOLIGADA = E.CODCOLIGADA AND I.CODFILIAL = E.CODFILIAL AND I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = E.CODESTRUTURA
						INNER JOIN KCOMPONENTE (NOLOCK) K ON  E.CODCOLIGADA = K.CODCOLIGADA AND  K.CODFILIAL = E.CODFILIAL AND K.CODESTRUTURA = E.CODESTRUTURA
						INNER JOIN TPRD (NOLOCK) P ON K.CODCOLIGADA = P.CODCOLIGADA AND K.IDPRODUTO = P.IDPRD
						INNER JOIN FLUIG.dbo.Z_CRM_ML001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO  AND P.CODIGOPRD = C.SUBSTITUTOCOMPONENTES  COLLATE SQL_Latin1_General_CP1_CI_AI		
					WHERE C.PRIORIDADEATVCOMPONENTES = 0 AND E.STATUSESTR = 1 AND I.OS = @NUM_OS AND ISNULL(C.SUBSTITUTOCOMPONENTES,'') <> '' AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)
				
			UNION ALL 
				-- SUBSTITUTOS DOS NÃO MANUFATURADOS
					SELECT 'A' TIPO, I.NIVEL, I.IDCRIACAO, K.CODCOLIGADA, K.CODESTRUTURA, K.CODATIVIDADE, K.IDAUTOINC, P2.IDPRD, C.IDPRDCOMPONENTES, K.QTDUSADA, K.CODFILIAL
					FROM FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I 
						INNER JOIN FLUIG.dbo.Z_CRM_ML001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO
						INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) P ON I.OS = P.OS AND I.IDCRIACAO = P.IDCRIACAOPAI
						INNER JOIN KESTRUTURA (NOLOCK) E ON P.CODCOLIGADA = E.CODCOLIGADA AND P.CODFILIAL = E.CODFILIAL AND P.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI = E.CODESTRUTURA
						INNER JOIN KCOMPONENTE (NOLOCK) K ON  E.CODCOLIGADA = K.CODCOLIGADA AND  K.CODFILIAL = E.CODFILIAL AND K.CODESTRUTURA = E.CODESTRUTURA
						INNER JOIN TPRD (NOLOCK) P2 ON K.CODCOLIGADA = P2.CODCOLIGADA AND K.IDPRODUTO = P2.IDPRD
					WHERE  ISNULL(C.SUBSTITUTOCOMPONENTES,'') <> '' AND  I.OS = @NUM_OS  AND I.TIPODESENHO = 'NAOMANUFATURADO' AND I.IDCRIACAO=ISNULL(@IDCRIACAO,I.IDCRIACAO)

				) SUB
			LEFT JOIN KCOMPSUBSTITUTO S ON S.CODCOLIGADA = SUB.CODCOLIGADA AND S.CODFILIAL = SUB.CODFILIAL AND S.CODESTRUTURA = SUB.CODESTRUTURA AND S.CODATIVIDADE = SUB.CODATIVIDADE AND S.IDAUTOINC = SUB.IDAUTOINC AND S.IDPRDORIGEM = SUB.IDPRD AND S.IDPRD = SUB.IDPRDCOMPONENTES
			WHERE S.CODCOLIGADA IS NULL
			ORDER BY SUB.CODESTRUTURA, SUB.CODATIVIDADE, SUB.IDPRD, SUB.IDPRDCOMPONENTES;

	COMMIT

	BEGIN TRAN

		UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(CAST(LEFT(CODORDEM, CHARINDEX('/',CODORDEM)-1) AS int)) FROM KORDEM WHERE CODCOLIGADA = @CODCOLIGADA AND CODFILIAL = @CODFILIAL) WHERE CODCOLIGADA = @CODCOLIGADA AND CODAUTOINC = 'KORDEM-'+CAST(@CODFILIAL AS VARCHAR(2))
	
	COMMIT

	/**************************************************************************************************************************************************************
		
		INSERE AS INFORMAÇÕES DE COMPONENTES SUBSTITUTOS DA ESTRUTURA CASO ELAS NÃO EXISTAM

	***************************************************************************************************************************************************************/

 -- FIM DA CRIAÇÃO DAS ESTRUTURAS

	IF 	@IDCRIACAO IS NULL
		BEGIN
			EXEC SP_DELP_INTEGRACAOREPETICAO @NUM_OS
		END

	/**************************************************************************************************************************************************************
		
		EXECUTA PROCEDURE DE INTEGRAR ESTRUTURA EM REPETIÇÃO PARA ALIMENTAR AS EXECUÇÕES DA ESTRUTURA : TABELAS Z_CRM_EX...

	***************************************************************************************************************************************************************/

END



