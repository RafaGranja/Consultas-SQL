USE [CORPORE]
GO
/****** Object:  Trigger [dbo].[T_DELP_ATUALIZA_PROJECAO_BSCINT]    Script Date: 20/12/2024 07:20:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- AUTHOR:		rafael.granja
-- CREATE DATE: 19/12/2024
-- DESCRIPTION:	atualiza projetado de tarefas quando ocorre uma entrada de nota
-- =============================================
ALTER TRIGGER [dbo].[T_DELP_ATUALIZA_PROJECAO_BSCINT]
   ON  [dbo].[TITMMOV]
   AFTER INSERT,DELETE,UPDATE
AS 
BEGIN
	-- SET NOCOUNT ON ADDED TO PREVENT EXTRA RESULT SETS FROM
	-- INTERFERING WITH SELECT STATEMENTS.
	SET NOCOUNT ON;

	DECLARE @INC INT,@INC2 INT;
	SET @INC=1
	SET @INC2=1

    -- INSERT STATEMENTS FOR TRIGGER HERE
	BEGIN TRY

		IF EXISTS(
			
			SELECT DISTINCT T.CODTMV FROM INSERTED I
			INNER JOIN TMOV T ON
			T.CODCOLIGADA=I.CODCOLIGADA
			AND T.IDMOV=I.IDMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=I.IDPRD
			WHERE (T.CODTMV LIKE '1.2.%' AND ISNULL(TV.FATURA,0)=1 AND PP.TIPO='S') OR ( T.CODTMV LIKE '1.1%' AND T.SERIE NOT IN ('OC','OSV','OCSC') AND T.SERIE LIKE 'S%' )
		
			UNION 
		
			SELECT DISTINCT T.CODTMV FROM DELETED I
			INNER JOIN TMOV T ON
			T.CODCOLIGADA=I.CODCOLIGADA
			AND T.IDMOV=I.IDMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=I.IDPRD
			WHERE (T.CODTMV LIKE '1.2.%' AND ISNULL(TV.FATURA,0)=1 AND PP.TIPO='S') OR ( T.CODTMV LIKE '1.1%' AND T.SERIE NOT IN ('OC','OSV','OCSC') AND T.SERIE LIKE 'S%' )

			

		)
		BEGIN

		
			SELECT TRF.*,TI.QUANTIDADEORIGINAL QUANTIDADE,TI.VALORLIQUIDO-ISNULL(IMP.VALORIMPOSTOS,0) VALOR INTO #CTE
			FROM INSERTED TI
			INNER JOIN TMOV T ON
			TI.CODCOLIGADA=T.CODCOLIGADA
			AND TI.IDMOV=T.IDMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			CROSS APPLY DBO.FN_DELP_RETORNA_TAREFA_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) TRF
			CROSS APPLY DBO.FN_DELP_RETORNA_VALOR_IMPOSTO_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) IMP
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=TI.IDPRD
			AND TRF.IDPRD=PP.IDPRD
			WHERE T.CODTMV LIKE '1.2.%' AND ISNULL(TV.FATURA,0)=1 AND PP.TIPO='S' AND T.CODCOLIGADA=1 AND ISNULL(T.STATUS,'')!='C' AND ISNULL(TI.STATUS,'')!='C'
			UNION ALL
			SELECT TRF.*,TI.QUANTIDADEORIGINAL*-1 QUANTIDADE,(TI.VALORLIQUIDO-ISNULL(IMP.VALORIMPOSTOS,0))*-1 VALOR
			FROM DELETED TI
			INNER JOIN TMOV T ON
			TI.CODCOLIGADA=T.CODCOLIGADA
			AND TI.IDMOV=T.IDMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			CROSS APPLY DBO.FN_DELP_RETORNA_TAREFA_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) TRF
			CROSS APPLY DBO.FN_DELP_RETORNA_VALOR_IMPOSTO_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) IMP
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=TI.IDPRD
			AND TRF.IDPRD=PP.IDPRD
			WHERE T.CODTMV LIKE '1.2.%' AND ISNULL(TV.FATURA,0)=1 AND PP.TIPO='S' AND T.CODCOLIGADA=1 AND ISNULL(T.STATUS,'')!='C' AND ISNULL(TI.STATUS,'')!='C'

		
			;WITH CTE2 AS (
			
				SELECT CODCOLIGADA,IDPRJ,CODPRJ,IDTRF,IDPRD,CODTRF,SUM(QUANTIDADE) QUANTIDADE,SUM(VALOR) VALOR,(
				SELECT (SELECT DISTINCT CONCAT(T2.NUMEROMOV,' - ',T2.CODTMV,',') 
				FROM INSERTED TI2
					INNER JOIN TMOV T2 ON
					TI2.CODCOLIGADA=T2.CODCOLIGADA
					AND TI2.IDMOV=T2.IDMOV
					WHERE ISNULL(T2.STATUS,'')!='C' AND ISNULL(TI2.STATUS,'')!='C'
				UNION 			
				SELECT DISTINCT CONCAT(T2.NUMEROMOV,' - ',T2.CODTMV,',') 
				FROM DELETED TI2
					INNER JOIN TMOV T2 ON
					TI2.CODCOLIGADA=T2.CODCOLIGADA
					AND TI2.IDMOV=T2.IDMOV
					WHERE ISNULL(T2.STATUS,'')!='C' AND ISNULL(TI2.STATUS,'')!='C') 
				FOR XML PATH(''),ELEMENTS ) MOVIMENTOS
				FROM #CTE 
				GROUP BY CODCOLIGADA,IDPRJ,CODPRJ,IDTRF,IDPRD,CODTRF
			)


			INSERT INTO FLUIG.DBO.Z_DELP_PROJECAOPRODUTO(CODCOLIGADA,CODPRJ,IDTRF,IDPRD,PERIODO,VALOR,PRECO,MOTIVO,SEQ,RECCREATEDBY,RECCREATEDON)
			SELECT Z.CODCOLIGADA,Z.CODPRJ,Z.IDTRF,Z.IDPRD,Z.PERIODO,
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN CASE WHEN Z.VALOR-C.QUANTIDADE<0 THEN 0 ELSE Z.VALOR-C.QUANTIDADE END ELSE Z.VALOR END, 
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN CASE WHEN Z.PRECO-C.VALOR<0 THEN 0 ELSE Z.PRECO-C.VALOR END ELSE Z.PRECO END, 
			CASE WHEN Z.PERIODO=CONCAT(YEAR(GETDATE()),'-',MONTH(GETDATE()))  THEN CONCAT(Z.MOTIVO,CHAR(13),CHAR(10),'Movimentos realizados:',C.MOVIMENTOS) ELSE Z.MOTIVO END, 
			(SELECT MAX(SEQ) FROM FLUIG.DBO.Z_DELP_PROJECAOPRODUTO WHERE CODCOLIGADA=Z.CODCOLIGADA AND CODPRJ=Z.CODPRJ AND IDTRF=Z.IDTRF AND IDPRD=Z.IDPRD)+1,
			'fluig',GETDATE()
			FROM
			FLUIG.DBO.Z_DELP_PROJECAOPRODUTO Z 
			INNER JOIN CTE2 C ON
			C.CODCOLIGADA=Z.CODCOLIGADA
			AND C.CODPRJ=Z.CODPRJ COLLATE SQL_LATIN1_GENERAL_CP1_CI_AI
			AND C.IDTRF=Z.IDTRF
			AND C.IDPRD=Z.IDPRD
			WHERE SEQ = (SELECT MAX(SEQ) FROM FLUIG.DBO.Z_DELP_PROJECAOPRODUTO WHERE CODCOLIGADA=Z.CODCOLIGADA AND CODPRJ=Z.CODPRJ AND IDTRF=Z.IDTRF AND IDPRD=Z.IDPRD)

			--#####################################################################################################################################################################################################

			SELECT TRF.*,TI.QUANTIDADEORIGINAL QUANTIDADE,TI.VALORLIQUIDO-ISNULL(IMP.VALORIMPOSTOS,0) VALOR INTO #CTE2
			FROM INSERTED TI
			INNER JOIN TMOV T ON
			TI.CODCOLIGADA=T.CODCOLIGADA
			AND TI.IDMOV=T.IDMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			CROSS APPLY DBO.FN_DELP_RETORNA_TAREFA_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) TRF
			CROSS APPLY DBO.FN_DELP_RETORNA_VALOR_IMPOSTO_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) IMP
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=TI.IDPRD
			AND TRF.IDPRD=PP.IDPRD
			WHERE T.CODTMV LIKE '1.1%' AND T.SERIE NOT IN ('OC','OSV','OCSC') AND T.SERIE LIKE 'S%' AND T.CODCOLIGADA=1 AND ISNULL(T.STATUS,'')!='C' AND ISNULL(TI.STATUS,'')!='C'
			UNION ALL
			SELECT TRF.*,TI.QUANTIDADEORIGINAL*-1 QUANTIDADE,(TI.VALORLIQUIDO-ISNULL(IMP.VALORIMPOSTOS,0))*-1 VALOR
			FROM DELETED TI
			INNER JOIN TMOV T ON
			TI.CODCOLIGADA=T.CODCOLIGADA
			AND TI.IDMOV=T.IDMOV
			INNER JOIN TTMV TV ON
			TV.CODCOLIGADA=T.CODCOLIGADA
			AND TV.CODTMV=T.CODTMV
			CROSS APPLY DBO.FN_DELP_RETORNA_TAREFA_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) TRF
			CROSS APPLY DBO.FN_DELP_RETORNA_VALOR_IMPOSTO_MOVIMENTO(TI.CODCOLIGADA,TI.IDMOV,TI.NSEQITMMOV) IMP
			INNER JOIN TPRD PP ON
			PP.CODCOLIGADA=T.CODCOLIGADA
			AND PP.IDPRD=TI.IDPRD
			AND TRF.IDPRD=PP.IDPRD
			WHERE T.CODTMV LIKE '1.1%' AND T.SERIE NOT IN ('OC','OSV','OCSC') AND T.SERIE LIKE 'S%' AND T.CODCOLIGADA=1 AND ISNULL(T.STATUS,'')!='C' AND ISNULL(TI.STATUS,'')!='C'


			;WITH CTE3 AS (
			
				SELECT CODCOLIGADA,IDPRJ,CODPRJ,IDTRF,CODTRF,SUM(QUANTIDADE) QUANTIDADE,SUM(VALOR) VALOR,(
				SELECT (SELECT DISTINCT CONCAT(T2.NUMEROMOV,' - ',T2.CODTMV,',')
				FROM INSERTED TI2
					INNER JOIN TMOV T2 ON
					TI2.CODCOLIGADA=T2.CODCOLIGADA
					AND TI2.IDMOV=T2.IDMOV
					WHERE T2.STATUS!='C' AND TI2.STATUS!='C'
				UNION 			
				SELECT DISTINCT CONCAT(T2.NUMEROMOV,' - ',T2.CODTMV,',') 
				FROM DELETED TI2
					INNER JOIN TMOV T2 ON
					TI2.CODCOLIGADA=T2.CODCOLIGADA
					AND TI2.IDMOV=T2.IDMOV
					WHERE T2.STATUS!='C' AND TI2.STATUS!='C') 
				FOR XML PATH(''),ELEMENTS ) MOVIMENTOS
				FROM #CTE2
				GROUP BY CODCOLIGADA,IDPRJ,CODPRJ,IDTRF,CODTRF
			)

			
			SELECT Z.CODCOLIGADA,Z.CODPRJ,Z.IDTRF,Z.PERIODO,Z.VALOR,Z.PRECO,CONCAT(Z.MOTIVO,CHAR(13),CHAR(10),'Movimentos realizados:',C.MOVIMENTOS) MOVIMENTOS,
			(SELECT MAX(SEQ) FROM FLUIG.DBO.Z_DELP_PROJECAOTAREFA WHERE CODCOLIGADA=Z.CODCOLIGADA AND CODPRJ=Z.CODPRJ AND IDTRF=Z.IDTRF)+1 SEQ,
			'fluig' USUARIO,GETDATE() DATA,C.QUANTIDADE QTD,C.VALOR VLR,ROW_NUMBER() OVER (ORDER BY Z.PERIODO) ROW,NULL OBS INTO #CTE3
			FROM FLUIG.DBO.Z_DELP_PROJECAOTAREFA Z 
			INNER JOIN CTE3 C ON
			C.CODCOLIGADA=Z.CODCOLIGADA
			AND C.CODPRJ=Z.CODPRJ COLLATE SQL_LATIN1_GENERAL_CP1_CI_AI
			AND C.IDTRF=Z.IDTRF
			WHERE SEQ = (SELECT MAX(SEQ) FROM FLUIG.DBO.Z_DELP_PROJECAOTAREFA WHERE CODCOLIGADA=Z.CODCOLIGADA AND CODPRJ=Z.CODPRJ AND IDTRF=Z.IDTRF)


			WHILE EXISTS(SELECT * FROM #CTE3 WHERE (QTD>0 OR VLR>0) AND (VALOR>0 OR PRECO>0)) 
			BEGIN
				
				IF (SELECT VALOR-QTD FROM #CTE3 WHERE ROW=@INC)<0
				BEGIN

					UPDATE #CTE3 SET 
					VALOR=CASE WHEN ROW=@INC THEN 0 ELSE VALOR END,
					QTD=QTD-(SELECT VALOR FROM #CTE3 WHERE ROW=@INC)
					SET @INC=@INC+1
				END
				ELSE
				BEGIN

					UPDATE #CTE3 SET 
					VALOR=VALOR-QTD,
					OBS=MOVIMENTOS
					WHERE ROW=@INC

					PRINT 2

				END

				IF (SELECT PRECO-VLR FROM #CTE3 WHERE ROW=@INC2)<0
				BEGIN

					UPDATE #CTE3 SET 
					PRECO=CASE WHEN ROW=@INC2 THEN 0 ELSE PRECO END,
					VLR=VLR-(SELECT PRECO FROM #CTE3 WHERE ROW=@INC2)
					SET @INC2=@INC2+1
				END
				ELSE
				BEGIN

					UPDATE #CTE3 SET 
					PRECO=PRECO-VLR,
					OBS=MOVIMENTOS
					WHERE ROW=@INC2

					PRINT 2

				END


			END

			INSERT INTO FLUIG.DBO.Z_DELP_PROJECAOTAREFA(CODCOLIGADA,CODPRJ,IDTRF,PERIODO,VALOR,PRECO,MOTIVO,SEQ,RECCREATEDBY,RECCREATEDON)
			SELECT CODCOLIGADA,CODPRJ,IDTRF,PERIODO,VALOR,PRECO,OBS,SEQ,USUARIO,DATA
			FROM #CTE3

			DROP TABLE #CTE
			DROP TABLE #CTE2
			DROP TABLE #CTE3



		END
	END TRY
	BEGIN CATCH
			
		PRINT 'ERRO AO EXECUTAR TRIGGER DE ATUALIZAÇÃO DO BSC'

	END CATCH


END
