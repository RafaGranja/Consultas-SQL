USE [CORPORE_DEV]
GO
/****** Object:  StoredProcedure [dbo].[SP_CRM_INTEGRACAOREPETICAO]    Script Date: 28/10/2023 16:46:50 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[SP_CRM_INTEGRACAOREPETICAO] (@CODCOLIGADA INT, @IDPRJ INT, @IDTRF INT, @QTDREPATICOES INT, @EDICAO CHAR(1))
AS

BEGIN

DECLARE @CODFILIAL INT, @QTDORDEM INT, @INDICE INT, @NUMPROCESSO INT, @CONTADOR INT =1 , @OS VARCHAR(MAX),
		 @IDPAI INT, @IDPAIEXEC INT, @DSCEXECUCAO VARCHAR(MAX), @DATAINICIAL DATE, @CODTRFPAI VARCHAR(10), @IDDISCIPLINA INT;



PRINT 'INICIO DENTRO DA PROC'

SELECT @QTDORDEM = ISNULL(I.EXECINTEGRADAS,0), @INDICE = I.INDICE, @NUMPROCESSO  = O.NUMPROCESSO, @CODFILIAL = I.CODFILIAL, @OS = O.NUM_OS,
		@DATAINICIAL = ISNULL(DATAINICIOCALC, CAST(GETDATE() AS DATE)) ,@IDPAI = T.IDTRF , @CODTRFPAI = T.CODTRF
FROM FLUIG.DBO.ML001004 O 
	INNER JOIN FLUIG.dbo.Z_CRM_ML001005 I on O.NUM_OS = I.OS
	INNER JOIN MTAREFA T ON T.CODCOLIGADA = I.CODCOLIGADA AND T.IDPRJ = O.IDPRJ_OS AND I.CODTRFPAI = T.CODTRF COLLATE Latin1_General_CI_AS
WHERE	T.CODCOLIGADA = @CODCOLIGADA
AND		T.IDPRJ = @IDPRJ
AND		T.IDTRF = @IDTRF
AND		T.TIPOPLANILHA = 0
AND		I.NIVEL = '';



-- VERIFICA SE DISCIPLINA JA EXISTE E PREECHE COM A 07-FABRICAÇÃO

IF NOT EXISTS (	SELECT * 
			FROM MDISCIPLINA D
			WHERE CODCOLIGADA = @CODCOLIGADA AND IDPRJ = @IDPRJ AND CODIGO = '07')
BEGIN
	INSERT INTO MDISCIPLINA VALUES (@CODCOLIGADA, @IDPRJ, ISNULL((SELECT MAX(IDDISCIPLINA) FROM MDISCIPLINA WHERE CODCOLIGADA = @CODCOLIGADA AND IDPRJ = @IDPRJ),0) + 1, '07', 'Manufatura', 'fluig', getdate(),'mestre', getdate())
	INSERT INTO MDISCIPLINAUSR 
			SELECT DISTINCT P.CODCOLIGADA , P.IDPRJ, I.IDDISCIPLINA, P.CODUSUARIO, 'fluig', getdate(),'mestre', getdate()
			FROM MDISCIPLINA (NOLOCK) I , MPRJUSR (NOLOCK) P
				LEFT JOIN  MDISCIPLINAUSR (NOLOCK) D  ON D.CODCOLIGADA = P.CODCOLIGADA AND D.IDPRJ = P.IDPRJ AND P.CODUSUARIO = D.CODUSUARIO AND D.IDDISCIPLINA = (SELECT IDDISCIPLINA 
																																									FROM MDISCIPLINA D
																																									WHERE CODCOLIGADA = @CODCOLIGADA AND IDPRJ = @IDPRJ AND CODIGO = '07' )
			WHERE D.CODUSUARIO IS NULL
			AND	P.CODCOLIGADA = I.CODCOLIGADA 
			AND P.IDPRJ = I.IDPRJ
			AND I.IDDISCIPLINA = (SELECT IDDISCIPLINA 
									FROM MDISCIPLINA D
									WHERE CODCOLIGADA = @CODCOLIGADA AND IDPRJ = @IDPRJ AND CODIGO = '07' )
			AND	P.CODCOLIGADA = @CODCOLIGADA
			AND P.IDPRJ = @IDPRJ

END


SELECT @IDDISCIPLINA = IDDISCIPLINA FROM MDISCIPLINA WHERE CODCOLIGADA = @CODCOLIGADA AND IDPRJ = @IDPRJ AND CODIGO = '07';

-- DEFINE O NUMERO QUE VAI COMEÇAR A REPETICAO

IF @EDICAO = 'N'
BEGIN

	SET @CONTADOR = @QTDORDEM+1;
	SET @QTDORDEM = @QTDORDEM + @QTDREPATICOES;

END;

-- ####### INICIADO A INTEGRAÇÃO COM FACTOR - ORDENS DE PRODUÇÃO ########

-- ATUALIZA AS QUANTIDADES

			PRINT 'AQUI É ANTES DO IF DO WHILE'
			PRINT @QTDORDEM
			PRINT @CONTADOR
			PRINT @NUMPROCESSO
			PRINT @INDICE
			PRINT @CODFILIAL
			PRINT 'SEQUENCIA QTDORDEM, CONTADOR, NUMPROCESSO,INDICE,CODFILIAL'


	UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(CAST(LEFT(CODORDEM, CHARINDEX('/',CODORDEM)-1) AS int)) FROM KORDEM WHERE CODCOLIGADA = @CODCOLIGADA AND CODFILIAL = @CODFILIAL) WHERE CODCOLIGADA = @CODCOLIGADA AND CODAUTOINC = 'KORDEM-'+CAST(@CODFILIAL AS VARCHAR(2))

	WHILE  @CONTADOR <= @QTDORDEM
	BEGIN

		PRINT 'ENTREI NO IF DA CRIAÇÃO DA ORDEM'

/*			
		-- ATUALIZA BASE DE DADOS DAS EX PARA FUNCIONAR NO NOVO PROCESSO.

			UPDATE I SET ITEMEXCLUSIVO = CASE WHEN O.CODORDEM IS NULL THEN 0 ELSE CASE WHEN ITEMEXCLUSIVO = 2 THEN 2 ELSE 1 END END
			FROM FLUIG.DBO.ML001004 (NOLOCK) M
				INNER JOIN FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I on  M.NUM_OS = I.OS AND I.EXECUCAO = @CONTADOR
				LEFT JOIN KITEMORDEM (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
				LEFT JOIN KORDEM (NOLOCK) O ON O.RESPONSAVEL LIKE I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(I.EXECUCAO AS varchar(10))+'/'+I.CODTRFPAI+'%'
			WHERE M.NUMPROCESSO = @NUMPROCESSO 
			*/
		-- INICIA A CRIAÇÃO DAS ORDENS DE PRODUÇÃO
			INSERT INTO KORDEM (CODCOLIGADA, CODCCUSTO,  CODORDEM, DSCORDEM, RESPONSAVEL, DTHRINICIALPREV, STATUS, DTHRFINALPREV, CODFILIAL, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
			SELECT I.CODCOLIGADA, M.NUM_OS, RIGHT(REPLICATE('0',5) + CAST( ROW_NUMBER() OVER (ORDER BY I.INDICE) + ISNULL((SELECT VALAUTOINC FROM GAUTOINC WHERE CODAUTOINC = 'KORDEM-'+CAST(@CODFILIAL AS VARCHAR(2))),0) AS varchar(MAX)),5)+'/'+RIGHT(CAST(YEAR(GETDATE()) AS varchar(MAX)),2),
						LEFT(P.DESCRICAO,80), P.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(@CONTADOR AS varchar(10))+'/'+@CODTRFPAI, GETDATE(), 0, GETDATE(), I.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
			FROM FLUIG.DBO.ML001004 (NOLOCK) M
					INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on M.NUM_OS = I.OS
					INNER JOIN TPRD (NOLOCK) P ON P.CODCOLIGADA = i.CODCOLIGADA  AND I.IDPRD = P.IDPRD
					INNER JOIN KESTRUTURA (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.IDPRODUTO = P.IDPRD AND K.CODESTRUTURA = P.CODIGOPRD				
					LEFT JOIN ( SELECT OI.CODCOLIGADA , OI.CODFILIAL, OI.CODESTRUTURA, O.RESPONSAVEL, O.CODORDEM
								FROM KITEMORDEM (NOLOCK) OI
									INNER JOIN KORDEM (NOLOCK) O ON  O.CODCOLIGADA = OI.CODCOLIGADA AND O.CODFILIAL = OI.CODFILIAL AND O.CODORDEM = OI.CODORDEM
								WHERE O.RESPONSAVEL =  OI.CODESTRUTURA+';'+CAST(@NUMPROCESSO AS VARCHAR(10))+'-'+CAST(@CONTADOR AS varchar(10))+'/'+@CODTRFPAI ) ORDEM ON K.CODCOLIGADA = ORDEM.CODCOLIGADA AND K.CODFILIAL = ORDEM.CODFILIAL AND K.CODESTRUTURA = ORDEM.CODESTRUTURA
			WHERE ISNULL(I.OPSUNITARIAS,'') <> 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND ORDEM.CODORDEM IS NULL AND M.NUMPROCESSO = @NUMPROCESSO  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
			ORDER BY I.INDICE
			
			PRINT 'PASSEI PELA CRIAÇÃO DAS ORDENS'
			PRINT @CONTADOR
			PRINT @NUMPROCESSO
			PRINT @INDICE
			PRINT @CODFILIAL
			PRINT 'SEQUENCIA CONTADOR, NUMPROCESSO,INDICE,CODFILIAL'

			UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(CAST(LEFT(CODORDEM, CHARINDEX('/',CODORDEM)-1) AS int)) FROM KORDEM WHERE CODCOLIGADA = @CODCOLIGADA AND CODFILIAL = @CODFILIAL) WHERE CODCOLIGADA = @CODCOLIGADA AND CODAUTOINC = 'KORDEM-'+CAST(@CODFILIAL AS VARCHAR(2))
	

			INSERT INTO KMODELO
			SELECT I.CODCOLIGADA,  I.CODIGOPRD, 'Base','Modelo Base',I.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
			FROM FLUIG.DBO.ML001004 (NOLOCK) M
				INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on M.NUM_OS = I.OS
				INNER JOIN KESTRUTURA E ON E.CODCOLIGADA = I.CODCOLIGADA AND E.CODFILIAL = I.CODFILIAL AND E.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
				LEFT JOIN KMODELO K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = E.CODESTRUTURA
			WHERE ISNULL(I.OPSUNITARIAS,'') <> 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND K.CODESTRUTURA IS NULL
			AND		M.NUMPROCESSO =  @NUMPROCESSO  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
			ORDER BY I.NIVEL, I.INDICE;
			

			INSERT INTO KITEMORDEM(CODCOLIGADA, CODORDEM, CODESTRUTURA, CODMODELO, CODLINHA, STATUS, QTDEPLANEJADA, DTHRINICIALPREV, DTHRFINALPREV, IDITEMORDEM, TIPOAPONTAMENTO, CODFILIAL, CODCCUSTO,  RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
			SELECT I.CODCOLIGADA, O.CODORDEM,
					K.CODESTRUTURA, 'base', '001', 0,CASE WHEN LEFT(K.CODESTRUTURA,2) = '04' THEN 1 ELSE CAST(I.TOTALQTDE AS float) END, GETDATE(), GETDATE(), ROW_NUMBER() OVER (ORDER BY K.CODESTRUTURA)+(SELECT MAX(IDITEMORDEM) FROM KITEMORDEM), 1, I.CODFILIAL, M.NUM_OS, 'fluig', GETDATE(),'fluig', GETDATE() 
			FROM FLUIG.DBO.ML001004 (NOLOCK) M
				INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on  M.NUM_OS = I.OS
				INNER JOIN KESTRUTURA (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
				INNER JOIN KORDEM (NOLOCK) O ON O.RESPONSAVEL = I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(@CONTADOR AS varchar(10))+'/'+@CODTRFPAI
				LEFT JOIN KITEMORDEM  OI ON K.CODCOLIGADA = OI.CODCOLIGADA AND K.CODFILIAL = OI.CODFILIAL AND K.CODESTRUTURA = OI.CODESTRUTURA AND OI.CODORDEM = O.CODORDEM
			WHERE ISNULL(I.OPSUNITARIAS,'') <> 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND OI.CODORDEM IS NULL AND M.NUMPROCESSO = @NUMPROCESSO  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
			ORDER BY I.INDICE;

		-- ATUALIZA AS DESCRIÇÕES DAS OP
		
		UPDATE O SET   O.DSCORDEM = LEFT(P.DESCRICAO,80)
		FROM FLUIG.DBO.ML001004 (NOLOCK) M
			INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on  M.NUM_OS = I.OS
			INNER JOIN KESTRUTURA (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
			INNER JOIN KORDEM (NOLOCK) O ON O.RESPONSAVEL LIKE I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-%'
			INNER JOIN KITEMORDEM (NOLOCK)  OI ON K.CODCOLIGADA = OI.CODCOLIGADA AND K.CODFILIAL = OI.CODFILIAL AND K.CODESTRUTURA = OI.CODESTRUTURA AND OI.CODORDEM = O.CODORDEM
			INNER JOIN KESTRUTURA (NOLOCK) E ON OI.CODCOLIGADA = E.CODCOLIGADA AND OI.CODFILIAL = E.CODFILIAL AND OI.CODESTRUTURA = E.CODESTRUTURA
			INNER JOIN TPRD (NOLOCK) P ON E.CODCOLIGADA = P.CODCOLIGADA AND E.IDPRODUTO = P.IDPRD
		WHERE M.NUMPROCESSO = @NUMPROCESSO AND O.STATUS <> 6 AND  P.DESCRICAO <> O.DSCORDEM ;
		
	
		UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(CAST(LEFT(CODORDEM, CHARINDEX('/',CODORDEM)-1) AS int)) FROM KORDEM WHERE CODCOLIGADA = @CODCOLIGADA AND CODFILIAL = @CODFILIAL) WHERE CODCOLIGADA = @CODCOLIGADA AND CODAUTOINC = 'KORDEM-'+CAST(@CODFILIAL AS VARCHAR(2))
	
	
		-- CRIAR ORDENS INDIVIDUAIS

		DECLARE @CODESTRUTURA VARCHAR(MAX), @QTDDESENHO INT

		DECLARE INDIVIDUAL CURSOR FOR 	SELECT K.CODESTRUTURA,  CAST(I.TOTALQTDE AS float) 
										FROM FLUIG.DBO.ML001004 (NOLOCK) M
											INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on  M.NUM_OS = I.OS
											INNER JOIN KESTRUTURA (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
										WHERE ISNULL(I.OPSUNITARIAS,'') = 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND M.NUMPROCESSO = @NUMPROCESSO AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
										ORDER BY I.INDICE;
		OPEN INDIVIDUAL;

		FETCH NEXT FROM INDIVIDUAL INTO @CODESTRUTURA, @QTDDESENHO;

		WHILE @@FETCH_STATUS = 0 
		BEGIN
			DECLARE @INDIVIDUAL INT = 1;
			WHILE @INDIVIDUAL <= @QTDDESENHO
			BEGIN
						
						
				INSERT INTO KORDEM (CODCOLIGADA, CODCCUSTO,  CODORDEM, DSCORDEM, RESPONSAVEL, DTHRINICIALPREV, STATUS, DTHRFINALPREV, CODFILIAL, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
				SELECT I.CODCOLIGADA, M.NUM_OS, RIGHT(REPLICATE('0',5) +CAST( ROW_NUMBER() OVER (ORDER BY I.INDICE) + (SELECT VALAUTOINC FROM GAUTOINC WHERE CODAUTOINC = 'KORDEM-'+CAST(@CODFILIAL AS VARCHAR(2))) AS varchar(MAX)),5)+'/'+RIGHT(CAST(YEAR(GETDATE()) AS varchar(MAX)),2),
							LEFT(P.DESCRICAO,80), P.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(@CONTADOR AS varchar(10))+'/'+@CODTRFPAI+'|'+CAST(@INDIVIDUAL AS VARCHAR(MAX)), GETDATE(), 0, GETDATE(), I.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
				FROM FLUIG.DBO.ML001004 (NOLOCK) M
						INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on M.NUM_OS = I.OS
						INNER JOIN TPRD (NOLOCK) P ON P.CODCOLIGADA = i.CODCOLIGADA  AND I.IDPRD = P.IDPRD
						INNER JOIN KESTRUTURA (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.IDPRODUTO = P.IDPRD					
						LEFT JOIN ( SELECT OI.CODCOLIGADA , OI.CODFILIAL, OI.CODESTRUTURA, O.RESPONSAVEL, O.CODORDEM
									FROM KITEMORDEM OI
										INNER JOIN KORDEM O ON  O.CODCOLIGADA = OI.CODCOLIGADA AND O.CODFILIAL = OI.CODFILIAL AND O.CODORDEM = OI.CODORDEM
									WHERE O.RESPONSAVEL =  OI.CODESTRUTURA+';'+CAST(@NUMPROCESSO AS VARCHAR(10))+'-'+CAST(@CONTADOR AS varchar(10))+'/'+@CODTRFPAI+'|'+CAST(@INDIVIDUAL AS VARCHAR(MAX)) ) ORDEM ON K.CODCOLIGADA = ORDEM.CODCOLIGADA AND K.CODFILIAL = ORDEM.CODFILIAL AND K.CODESTRUTURA = ORDEM.CODESTRUTURA
				WHERE K.CODESTRUTURA = @CODESTRUTURA AND ISNULL(I.OPSUNITARIAS,'') = 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND ORDEM.CODORDEM IS NULL AND M.NUMPROCESSO = @NUMPROCESSO  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
				ORDER BY I.INDICE
		

				UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(CAST(LEFT(CODORDEM, CHARINDEX('/',CODORDEM)-1) AS int)) FROM KORDEM WHERE CODCOLIGADA = @CODCOLIGADA AND CODFILIAL = @CODFILIAL) WHERE CODCOLIGADA = @CODCOLIGADA AND CODAUTOINC = 'KORDEM-'+CAST(@CODFILIAL AS VARCHAR(2))
	

				INSERT INTO KMODELO
				SELECT I.CODCOLIGADA,  I.CODIGOPRD, 'Base','Modelo Base',I.CODFILIAL, 'fluig', GETDATE(),'fluig', GETDATE() 
				FROM FLUIG.DBO.ML001004 (NOLOCK) M
					INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on M.NUM_OS = I.OS
					INNER JOIN KESTRUTURA E ON E.CODCOLIGADA = I.CODCOLIGADA AND E.CODESTRUTURA = I.CODIGOPRD  COLLATE SQL_Latin1_General_CP1_CI_AI
					LEFT JOIN KMODELO (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = E.CODESTRUTURA
			WHERE I.CODIGOPRD = @CODESTRUTURA AND ISNULL(I.OPSUNITARIAS,'') = 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND K.CODESTRUTURA IS NULL
				AND		M.NUMPROCESSO =  @NUMPROCESSO  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
				ORDER BY I.NIVEL, I.INDICE;

	
				INSERT INTO KITEMORDEM(CODCOLIGADA, CODORDEM, CODESTRUTURA, CODMODELO, CODLINHA, STATUS, QTDEPLANEJADA, DTHRINICIALPREV, DTHRFINALPREV, IDITEMORDEM, TIPOAPONTAMENTO, CODFILIAL, CODCCUSTO,  RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
				SELECT I.CODCOLIGADA, O.CODORDEM,
						K.CODESTRUTURA, 'base', '001', 0, 1 QTDE_INDIVIDUAL, GETDATE(), GETDATE(), ROW_NUMBER() OVER (ORDER BY K.CODESTRUTURA)+(SELECT MAX(IDITEMORDEM) FROM KITEMORDEM), 1, I.CODFILIAL, M.NUM_OS, 'fluig', GETDATE(),'fluig', GETDATE() 
				FROM FLUIG.DBO.ML001004 (NOLOCK) M
					INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on  M.NUM_OS = I.OS
					INNER JOIN KESTRUTURA (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
					INNER JOIN KORDEM (NOLOCK) O ON O.RESPONSAVEL = I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(@CONTADOR AS varchar(10))+'/'+@CODTRFPAI+'|'+CAST(@INDIVIDUAL AS VARCHAR(MAX))
					LEFT JOIN KITEMORDEM (NOLOCK) OI ON K.CODCOLIGADA = OI.CODCOLIGADA AND K.CODFILIAL = OI.CODFILIAL AND K.CODESTRUTURA = OI.CODESTRUTURA AND OI.CODORDEM = O.CODORDEM
				WHERE K.CODESTRUTURA = @CODESTRUTURA AND ISNULL(I.OPSUNITARIAS,'') = 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND OI.CODORDEM IS NULL AND M.NUMPROCESSO = @NUMPROCESSO  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
				ORDER BY I.INDICE;


				INSERT INTO KORDEMCOMPL (CODCOLIGADA, CODORDEM, CODFILIAL, NUMEXEC, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
				SELECT I.CODCOLIGADA, O.CODORDEM, O.CODFILIAL, @CONTADOR, 'fluig', GETDATE(),'fluig', GETDATE() 
				FROM FLUIG.DBO.ML001004 (NOLOCK) M
					INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on  M.NUM_OS = I.OS
					INNER JOIN KESTRUTURA (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
					INNER JOIN KORDEM (NOLOCK) O ON O.RESPONSAVEL = I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(@CONTADOR AS varchar(10))+'/'+@CODTRFPAI+'|'+CAST(@INDIVIDUAL AS VARCHAR(MAX))
					LEFT JOIN KORDEMCOMPL (NOLOCK)  OI ON K.CODCOLIGADA = OI.CODCOLIGADA AND K.CODFILIAL = OI.CODFILIAL AND OI.CODORDEM = O.CODORDEM
				WHERE K.CODESTRUTURA = @CODESTRUTURA AND ISNULL(I.OPSUNITARIAS,'') = 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND OI.CODORDEM IS NULL AND M.NUMPROCESSO = @NUMPROCESSO  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
				ORDER BY I.INDICE;

			
			 SET @INDIVIDUAL += 1;
			END;



			FETCH NEXT FROM INDIVIDUAL INTO @CODESTRUTURA, @QTDDESENHO;
		END
		CLOSE INDIVIDUAL;
		DEALLOCATE INDIVIDUAL;


			-- ATUALIZA AS ITEM ORDENS JÁ CADASTRADAS
		/* DESABILITADO PELO WAGNER, LUNARDI E JONATAS NO DIA 07/04/2022 POR ACHAR QUE NÃO FAZIA SENTIDO ATUALIZAR AS QUANTIDADE DAS ORDENS
		 ATIVADO PELO WANGER E LUNARDI NO DIA 27/06/2022, PARA ALTERAR AS ORDEM AINDA NÃO PROGRAMADA

		*/
		
		PRINT ' INICIO ATUALIZA A QUANTIDADE DO ITEM DA ORDEM - LUNARDI'

		UPDATE  OI SET QTDEPLANEJADA = CASE WHEN LEFT(K.CODESTRUTURA,2) = '04' THEN 1 ELSE CAST(I.TOTALQTDE AS float) END, RECMODIFIEDBY='fluig', RECMODIFIEDON=GETDATE() 
		FROM FLUIG.DBO.ML001004 (NOLOCK) M
			INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on  M.NUM_OS = I.OS
			INNER JOIN KESTRUTURA (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
			INNER JOIN KORDEM (NOLOCK) O ON O.RESPONSAVEL = I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(@CONTADOR AS varchar(10))+'/'+@CODTRFPAI COLLATE Latin1_General_CI_AS
			INNER JOIN KITEMORDEM (NOLOCK)  OI ON K.CODCOLIGADA = OI.CODCOLIGADA AND K.CODFILIAL = OI.CODFILIAL AND K.CODESTRUTURA = OI.CODESTRUTURA AND OI.CODORDEM = O.CODORDEM
		WHERE OI.STATUS = 0 AND ISNULL(I.OPSUNITARIAS,'') <> 'SIM' AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE AND M.NUMPROCESSO = @NUMPROCESSO  AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_ML001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO );
	
		PRINT ' FIM ATUALIZA A QUANTIDADE DO ITEM DA ORDEM - LUNARDI'
		
			-- POPULANDO AS TABELAS DO FLUIG COM AS EXECUÇÕES
			
			-- ############################################################################################################################################
			--                           INICIO DA INCLUSÃO DO EX001005
			-- ############################################################################################################################################

				DECLARE  @ID INT, @IDCRIACAOPAI INT, @IDCRIACAO INT, @POSICAOINDICE INT, 
						@INDICE_EX VARCHAR(5), @INDICE_N VARCHAR(MAX), @NIVEL_N VARCHAR(MAX), @POSICAOINDICE_N INT
							-- CRIA CÓPIA DA EXECUÇÃO
				
				-- VERIFICAR SE EXISTE O INDICE SENÃO CRIA
				
					IF NOT EXISTS (SELECT CODCOLIGADA
									FROM FLUIG.dbo.Z_CRM_EX001005
									WHERE OS = @OS AND CODTRFPAI = @CODTRFPAI AND NIVEL = '' AND EXECUCAO = 1)
					
						SELECT @INDICE_EX = MAX(CAST(POSICAOINDICE AS INT)) + 1
						FROM FLUIG.dbo.Z_CRM_EX001005
						WHERE OS = @OS AND NIVEL = '' AND EXECUCAO = 1

					ELSE

						SELECT @INDICE_EX = INDICE
						FROM FLUIG.dbo.Z_CRM_EX001005
						WHERE OS = @OS
						AND CODTRFPAI = @CODTRFPAI AND NIVEL = '' AND EXECUCAO = 1;

				IF @INDICE_EX IS NULL
					SET @INDICE_EX = @INDICE;


				--RENUMERA

				DECLARE EXECUCAO CURSOR FOR

						SELECT	M.ID, M.IDCRIACAO, M.IDCRIACAOPAI, 
									CASE WHEN CHARINDEX('.',M.INDICE) = 0 THEN @INDICE_EX ELSE @INDICE_EX+ SUBSTRING(M.INDICE, CHARINDEX('.',M.INDICE),LEN(M.INDICE)) END, 
									CASE WHEN M.NIVEL = '' 
											THEN '' 
											ELSE CASE WHEN CHARINDEX('.',M.NIVEL) = 0 
													THEN @INDICE_EX ELSE @INDICE_EX+ SUBSTRING(M.NIVEL, CHARINDEX('.',M.NIVEL),LEN(M.NIVEL)) END END, 
									CASE WHEN M.NIVEL = '' 
										THEN 
											@INDICE_EX
										ELSE M.POSICAOINDICE END

						FROM FLUIG.dbo.Z_CRM_ML001005 M (NOLOCK)
							LEFT JOIN FLUIG.dbo.Z_CRM_EX001005 E (NOLOCK) ON M.IDCRIACAO = E.IDCRIACAO AND M.OS = E.OS AND E.EXECUCAO = @CONTADOR
						WHERE E.ID IS NULL AND  M.OS = @OS AND CASE WHEN CHARINDEX('.',M.INDICE) <> 0 THEN CAST(LEFT(M.INDICE,CHARINDEX('.',M.INDICE)-1) AS int) ELSE CAST(M.INDICE AS int) END =  @INDICE
						ORDER BY CAST('/' + REPLACE(M.INDICE, '.', '/') + '/' AS HIERARCHYID)

		
				OPEN EXECUCAO

				FETCH NEXT FROM EXECUCAO INTO @ID, @IDCRIACAO, @IDCRIACAOPAI, @INDICE_N , @NIVEL_N, @POSICAOINDICE_N

				WHILE @@FETCH_STATUS = 0
				BEGIN


						-- INSERE ITENS EXCLUIVOS CORRETAMENTE
						INSERT INTO FLUIG.dbo.Z_CRM_EX001005  (	 ID, companyid, cardid, documentid, version, tableid, TITULOITEM, NIVEL, POSICAO, DESCRICAO, NUMDESENHO, REVISAODESENHO, NUMDBI, REVISAODBI, DESQTDE, TOTALQTDE, BITOLAESP, LARGURAMASSA, 
																 ESPLARGURAROSCA, COMPRIMENTO, MATERIAL, PESO, OBSERVACOES, TIPO, SEQ, masterid, PESOMATERIAL, OS, DATAREVISAO, PESOBRUTO, PESOLIQUIDO, OBSERVACOESDESENHO, PERIMETROCORTE, AREAPINTURA, 
																 OBSPROCESSO, OBSGERAL, QUANTIDADEMATERIAL, TIPODESENHO, POSICAOCOMPLETA, ESPESSURA, BITOLA, LARGURA, MASSALINEAR, DIAMETROEXTERNO, DIAMETROINTERNO, ESPROSCA, POSICAOCOMPLETAANTIGA, 
																 NOVOMATERIAL, MATERIAL_ZOOM, IDMATERIAL, CODIGOPRD,  POSICAOINDICE,  POSICAOESTRUTURA, POSICAODESENHO, AREASECAO, ALTURA, LARGURAMESA, ESPALMA, ESPMESA, INDICE, INDICEANTIGO, IDCRIACAO, 
																 PRODUTORM, IDPRD, EXPANSOR, CODIGOPRDMATERIAL, CODTRFOS, UNDMEDIDA, ORDEM, LARGURAABA, ESPABA, INTEGRADO, DSCTRFOS, SOLICITACAO, PAIDETALHADO, COMPORLISTA, CODTRFITEM, IDTRFITEM, 
																 NOMETRFITEM, CODIGOTAREFADESC, IDPRJOS, DESCOS, DETALHADO, NUMDOCDELP, REVISAODOCDELP, CODCOLIGADA, DIAMETROEXTERNODISCO, DIAMETROINTERNODISCO, CHECKUSINAGEM, CHECKCALDERARIA, CODFILIAL, 
																 CODTRFPAI, EXECINTEGRADAS, IDTRFPAI, NOMETRFPAI, EXECUCOES, PESOUNITARIO, OPSUNITARIAS, QTDEUNCOMP, OP, EXECUCAO, CODTRFEX, IDCRIACAOPAI,ITEMEXCLUSIVO,RECCREATEDBY,RECCREATEDON,RECMODIFIEDBY,RECMODIFIEDON)

							
							SELECT	M.ID, M.companyid, M.cardid, M.documentid, M.version, M.tableid, M.TITULOITEM, 
									 @NIVEL_N, M.POSICAO, M.DESCRICAO, M.NUMDESENHO, M.REVISAODESENHO, M.NUMDBI, M.REVISAODBI, M.DESQTDE, 
									M.TOTALQTDE, M.BITOLAESP, M.LARGURAMASSA, M.ESPLARGURAROSCA, M.COMPRIMENTO, M.MATERIAL, M.PESO, M.OBSERVACOES, M.TIPO, M.SEQ, M.masterid, M.PESOMATERIAL, M.OS, M.DATAREVISAO, M.PESOBRUTO, 
									M.PESOLIQUIDO, M.OBSERVACOESDESENHO, M.PERIMETROCORTE, M.AREAPINTURA, M.OBSPROCESSO, M.OBSGERAL, M.QUANTIDADEMATERIAL, M.TIPODESENHO, M.POSICAOCOMPLETA, M.ESPESSURA, M.BITOLA, M.LARGURA, 
									M.MASSALINEAR, M.DIAMETROEXTERNO, M.DIAMETROINTERNO, M.ESPROSCA, M.POSICAOCOMPLETAANTIGA, M.NOVOMATERIAL, M.MATERIAL_ZOOM, M.IDMATERIAL, M.CODIGOPRD, 
									@POSICAOINDICE_N, M.POSICAOESTRUTURA, 
									M.POSICAODESENHO, M.AREASECAO, M.ALTURA, M.LARGURAMESA, M.ESPALMA, M.ESPMESA, @INDICE_N, 
									M.INDICEANTIGO, M.IDCRIACAO, M.PRODUTORM, M.IDPRD, M.EXPANSOR, M.CODIGOPRDMATERIAL, M.CODTRFOS, M.UNDMEDIDA, M.ORDEM, M.LARGURAABA, M.ESPABA, M.INTEGRADO, M.DSCTRFOS, M.SOLICITACAO, NULL PAIDETALHADO, 
									M.COMPORLISTA, M.CODTRFITEM, M.IDTRFITEM, M.NOMETRFITEM, M.CODIGOTAREFADESC, M.IDPRJOS, M.DESCOS, NULL DETALHADO, M.NUMDOCDELP, M.REVISAODOCDELP, M.CODCOLIGADA, M.DIAMETROEXTERNODISCO, M.DIAMETROINTERNODISCO, 
									M.CHECKUSINAGEM, M.CHECKCALDERARIA, M.CODFILIAL, M.CODTRFPAI, M.EXECINTEGRADAS, M.IDTRFPAI, M.NOMETRFPAI, M.EXECUCOES, M.PESOUNITARIO, M.OPSUNITARIAS, M.QTDEUNCOMP, NULL, @CONTADOR, NULL , M.IDCRIACAOPAI, 0,
									M.RECCREATEDBY,M.RECCREATEDON,M.RECMODIFIEDBY,M.RECMODIFIEDON
						FROM FLUIG.DBO.Z_CRM_ML001005 M (NOLOCK)
						WHERE  M.OS = @OS AND IDCRIACAO = @IDCRIACAO
		
						FETCH NEXT FROM EXECUCAO INTO @ID, @IDCRIACAO, @IDCRIACAOPAI, @INDICE_N , @NIVEL_N, @POSICAOINDICE_N

				END

				CLOSE EXECUCAO
				DEALLOCATE EXECUCAO


							   
			-- ############################################################################################################################################
			--                           FIM DA INCLUSÃO DO EX001005
			-- ############################################################################################################################################
				UPDATE FLUIG.dbo.Z_CRM_EX001005 SET CODTRFPAI = @CODTRFPAI
				WHERE OS = @OS AND EXECUCAO = @CONTADOR AND  CASE WHEN CHARINDEX('.',INDICE) <> 0 THEN CAST(LEFT(INDICE,CHARINDEX('.',INDICE)-1) AS int) ELSE CAST(INDICE AS int) END =  @INDICE_EX;

		
				INSERT INTO FLUIG.dbo.Z_CRM_EX001021  
				SELECT M.ID,M.companyid,M.cardid,M.documentid,M.version,M.tableid,M.PRIORIDADE,M.IDCRIACAOPROCESSO,M.CODATIVIDADE,M.OSPROCESSO,M.IDPROCESSO,M.DESCATIVIDADE,
						M.HABILIDADEREQUERIDA,M.CODHABILIDADE,M.CODPOSTO,M.DESCPOSTO,M.FILA,M.CONFIGURACAO,M.PROCESSAMENTO,M.DESAGREGACAO,M.ESPERA,M.MOVIMENTACAO,M.MINUTOSGASTOS,
						M.DESCPROCESSO,M.DOCAPOIOATV1,M.DOCAPOIOATV2,M.DOCAPOIOATV3,M.DOCAPOIOATV4,M.masterid,M.SOLICITACAOPROCESSO,M.FORNPARA,M.INTEGRADOPROCESSO,I.EXECUCAO , NULL,
						M.RECCREATEDBY,M.RECCREATEDON,M.RECMODIFIEDBY,M.RECMODIFIEDON
				FROM  FLUIG.dbo.Z_CRM_ML001021 M (NOLOCK)
					INNER JOIN FLUIG.dbo.Z_CRM_EX001005 I (NOLOCK)  ON I.OS = M.OSPROCESSO AND M.IDCRIACAOPROCESSO = I.IDCRIACAO
					LEFT JOIN FLUIG.dbo.Z_CRM_EX001021 E (NOLOCK) ON M.IDCRIACAOPROCESSO = E.IDCRIACAOPROCESSO AND M.CODATIVIDADE = E.CODATIVIDADE AND I.OS = E.OSPROCESSO AND E.EXECUCAO = I.EXECUCAO
				WHERE E.ID IS NULL AND I.ITEMEXCLUSIVO = 0 AND M.OSPROCESSO = @OS AND  I.CODTRFPAI = @CODTRFPAI AND I.EXECUCAO = @CONTADOR


				INSERT INTO FLUIG.dbo.Z_CRM_EX001019 
				SELECT M.ID,M.companyid,M.cardid,M.documentid,M.version,M.tableid,M.PRODUTOCOMPONENTES,M.IDPRDCOMPONENTES,M.CODIGOPRDCOMPONENTES,M.CODUNDCOMPONENTES,
						M.IDCRIACAOCOMPONENTES,M.QTDEUNCOMPONENTES,M.QTDETOTALCOMPONENTES,M.SUBSTITUTOCOMPONENTES,M.INSUMOCOMPONENTES,M.LISTACOMPONENTES,M.masterid,
						M.IDCOMPONENTES,M.OSCOMPONENTES,M.SOLICITACAOCOMPONENTES,M.INTEGRADOCOMPONENTES,M.PRIORIDADEATVCOMPONENTES, I.EXECUCAO, NULL,M.RECCREATEDBY,
						M.RECCREATEDON,M.RECMODIFIEDBY,M.RECMODIFIEDON
				FROM  FLUIG.dbo.Z_CRM_ML001019 M  (NOLOCK)
					INNER JOIN FLUIG.dbo.Z_CRM_EX001005 I (NOLOCK) ON I.OS = M.OSCOMPONENTES AND M.IDCRIACAOCOMPONENTES = I.IDCRIACAO
					INNER JOIN FLUIG.dbo.Z_CRM_EX001021 P (NOLOCK) ON  I.OS = P.OSPROCESSO AND P.IDCRIACAOPROCESSO = I.IDCRIACAO AND M.PRIORIDADEATVCOMPONENTES = P.PRIORIDADE AND P.EXECUCAO = I.EXECUCAO
					LEFT JOIN FLUIG.dbo.Z_CRM_EX001019 E (NOLOCK) ON M.OSCOMPONENTES = E.OSCOMPONENTES AND M.IDCRIACAOCOMPONENTES = E.IDCRIACAOCOMPONENTES AND M.PRIORIDADEATVCOMPONENTES = E.PRIORIDADEATVCOMPONENTES AND M.IDPRDCOMPONENTES = E.IDPRDCOMPONENTES  AND E.EXECUCAO = P.EXECUCAO
				WHERE E.ID IS NULL AND I.ITEMEXCLUSIVO = 0 AND M.OSCOMPONENTES = @OS AND  I.CODTRFPAI = @CODTRFPAI AND I.EXECUCAO = @CONTADOR
		
				INSERT INTO FLUIG.dbo.Z_CRM_EX001019 
				SELECT M.ID,M.companyid,M.cardid,M.documentid,M.version,M.tableid,M.PRODUTOCOMPONENTES,M.IDPRDCOMPONENTES,M.CODIGOPRDCOMPONENTES,M.CODUNDCOMPONENTES,
						M.IDCRIACAOCOMPONENTES,M.QTDEUNCOMPONENTES,M.QTDETOTALCOMPONENTES,M.SUBSTITUTOCOMPONENTES,M.INSUMOCOMPONENTES,M.LISTACOMPONENTES,M.masterid,
						M.IDCOMPONENTES,M.OSCOMPONENTES,M.SOLICITACAOCOMPONENTES,M.INTEGRADOCOMPONENTES,M.PRIORIDADEATVCOMPONENTES, I.EXECUCAO, NULL,M.RECCREATEDBY,
						M.RECCREATEDON,M.RECMODIFIEDBY,M.RECMODIFIEDON
				FROM  FLUIG.dbo.Z_CRM_ML001019 M  (NOLOCK)
					INNER JOIN FLUIG.dbo.Z_CRM_EX001005 I (NOLOCK) ON I.OS = M.OSCOMPONENTES AND M.IDCRIACAOCOMPONENTES = I.IDCRIACAO
					LEFT JOIN FLUIG.dbo.Z_CRM_EX001021 P (NOLOCK) ON  I.OS = P.OSPROCESSO AND P.IDCRIACAOPROCESSO = I.IDCRIACAO AND M.PRIORIDADEATVCOMPONENTES = P.PRIORIDADE AND P.EXECUCAO = I.EXECUCAO
					LEFT JOIN FLUIG.dbo.Z_CRM_EX001019 E (NOLOCK) ON M.OSCOMPONENTES = E.OSCOMPONENTES AND M.IDCRIACAOCOMPONENTES = E.IDCRIACAOCOMPONENTES AND M.PRIORIDADEATVCOMPONENTES = E.PRIORIDADEATVCOMPONENTES AND M.IDPRDCOMPONENTES = E.IDPRDCOMPONENTES  AND E.EXECUCAO = I.EXECUCAO
				WHERE P.ID IS NULL AND  E.ID IS NULL AND I.ITEMEXCLUSIVO = 0 AND M.OSCOMPONENTES = @OS AND  I.CODTRFPAI = @CODTRFPAI AND I.EXECUCAO = @CONTADOR

				

		SET @CONTADOR += 1;
	END

	INSERT INTO  KATVORDEM (CODCOLIGADA, CODORDEM, CODESTRUTURA, CODMODELO, CODATIVIDADE, CODETAPA, CODESTRUTURAFEITA, CODPOSTO, DTHRINICIOPREV, DTHRFINALPREV, QTESTOQUE, QTPREVISTA, QUANTIDADE,PERCENTUAL, STATUS, IDATVORDEM, IDATVDEPEND, TEMPO, DTHORAIDEAL, TIPODELAY, CODMODELOFEITO, CODFILIAL, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)

	SELECT O.CODCOLIGADA, O.CODORDEM, I.CODESTRUTURA, I.CODMODELO, C.CODATIVIDADE, 'ETP-GLOBAL' , I.CODESTRUTURA, C.CODPOSTO, I.DTHRFINALPREV, I.DTHRFINALPREV, 0, I.QTDEPLANEJADA, 0, 0, 0,ROW_NUMBER() OVER ( PARTITION BY O.CODCOLIGADA, O.CODORDEM ORDER BY O.CODCOLIGADA, O.CODORDEM, C.PRIORIDADE)+ISNULL((SELECT MAX(IDATVORDEM) FROM KATVORDEM ATV WHERE ATV.CODCOLIGADA = O.CODCOLIGADA AND ATV.CODFILIAL = O.CODFILIAL AND ATV.CODORDEM = O.CODORDEM),0), -1, (ISNULL(C.FILA,0)+ISNULL(C.CONFIGURACAO,0)+ISNULL(CAST(C.PROCESSAMENTO AS INT),0)+ISNULL(C.DESAGREGACAO,0)+ISNULL(C.ESPERA,0)+ISNULL(C.MOVIMENTACAO,0)) * I.QTDEPLANEJADA,I.DTHRFINALPREV, -1, I.CODMODELO, I.CODFILIAL, 'fluig',getdate(),'fluig',getdate() 
	FROM  FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I5 
		INNER JOIN FLUIG.DBO.ML001004 (NOLOCK) Z ON Z.NUM_OS = I5.OS
		INNER JOIN FLUIG.dbo.Z_CRM_EX001021 (NOLOCK) C ON I5.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I5.IDCRIACAO  AND C.EXECUCAO = I5.EXECUCAO
		INNER JOIN KORDEM (NOLOCK) O  ON O.RESPONSAVEL LIKE I5.CODIGOPRD+';'+Z.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(I5.EXECUCAO AS varchar(10))+'/'+I5.CODTRFPAI COLLATE Latin1_General_CI_AS+'%'
		INNER JOIN KITEMORDEM (NOLOCK) I ON O.CODCOLIGADA = I.CODCOLIGADA AND O.CODFILIAL = I.CODFILIAL AND O.CODORDEM = I.CODORDEM
		LEFT JOIN KATVORDEM (NOLOCK) AO ON AO.CODCOLIGADA = O.CODCOLIGADA AND AO.CODFILIAL = O.CODFILIAL AND AO.CODORDEM = O.CODORDEM AND AO.CODESTRUTURA = I.CODESTRUTURA AND AO.CODATIVIDADE = C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
	WHERE I5.ITEMEXCLUSIVO = 0 AND AO.CODATIVIDADE IS NULL AND O.RESPONSAVEL LIKE '%;'+CAST(@NUMPROCESSO AS VARCHAR(10))+'-%'
	ORDER BY O.CODCOLIGADA, O.CODORDEM, C.PRIORIDADE;

	-- ATUALIZA OS TEMPOS (CAMPO PROCESSAMENTO) DAS ATIVIDADES DA EX001021 COM BASE NA ML001021
	-- INSERIDO PELO WAGNER NOBRE DIA 22/11/2022

UPDATE C SET C.PROCESSAMENTO = M21.PROCESSAMENTO
       FROM  FLUIG.dbo.Z_CRM_ML001021(NOLOCK) M21
			INNER JOIN FLUIG.dbo.Z_CRM_EX001021 (NOLOCK) C ON C.IDCRIACAOPROCESSO = M21.IDCRIACAOPROCESSO AND C.CODATIVIDADE = M21.CODATIVIDADE AND C.OSPROCESSO = M21.OSPROCESSO
			INNER JOIN FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I5 ON I5.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I5.IDCRIACAO  AND C.EXECUCAO = I5.EXECUCAO
	   WHERE I5.OS = @OS AND I5.CODTRFPAI = @CODTRFPAI

	-- ATUALIZA OS TEMPOS (CAMPO TEMPO) DAS ATIVIDADES DAS ORDENS DE PRODUÇÃO (COM STATUS 0,2 E 3) COM BASE NOS TEMPOS (CAMPO PROCESSAMENTO) DA EX0010213
	-- INSERIDO PELO WAGNER NOBRE DIA 22/11/2022

UPDATE AO SET TEMPO = (AO.QTPREVISTA * C.PROCESSAMENTO) 
	FROM  FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I5 
		INNER JOIN FLUIG.DBO.ML001004 (NOLOCK) Z ON Z.NUM_OS = I5.OS
		INNER JOIN FLUIG.dbo.Z_CRM_EX001021 (NOLOCK) C ON I5.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I5.IDCRIACAO  AND C.EXECUCAO = I5.EXECUCAO
		INNER JOIN KORDEM (NOLOCK) O  ON O.RESPONSAVEL LIKE I5.CODIGOPRD+';'+Z.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(I5.EXECUCAO AS varchar(10))+'/'+I5.CODTRFPAI COLLATE Latin1_General_CI_AS+'%'
		INNER JOIN KITEMORDEM (NOLOCK) I ON O.CODCOLIGADA = I.CODCOLIGADA AND O.CODFILIAL = I.CODFILIAL AND O.CODORDEM = I.CODORDEM
		INNER JOIN KATVORDEM (NOLOCK) AO ON AO.CODCOLIGADA = O.CODCOLIGADA AND AO.CODFILIAL = O.CODFILIAL AND AO.CODORDEM = O.CODORDEM AND AO.CODESTRUTURA = I.CODESTRUTURA AND AO.CODATIVIDADE = C.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
	WHERE  I5.OS = @OS AND I5.CODTRFPAI = @CODTRFPAI AND  AO.STATUS IN (0,2,3)


	-- MATERIA PRIMA DAS ATIVIDADES DA ORDENS
	
	INSERT INTO KATVORDEMMP
		SELECT 
		(SELECT VALAUTOINC 
		FROM GAUTOINC  (NOLOCK)
		WHERE CODAUTOINC = 'IDATVORDEMMATERIAPRIMA' 
		AND CODSISTEMA = 'K' 
		AND CODCOLIGADA = 0) + ROW_NUMBER() OVER (ORDER BY C.CODCOLIGADA) ID, 
	A.CODCOLIGADA, A.CODORDEM, A.CODESTRUTURA, A.CODMODELO, A.IDATVORDEM, A.DTHRINICIOPREV DTAPONTAMENTO, C.IDPRD, NULL NSEQITMGRD, ISNULL(C.QTD,0) * ISNULL(I.QTDEPLANEJADA,0) QTD,
	0 EFETIVADO, NULL IDLOTE, A.CODFILIAL, ISNULL(C.QTD,0), 0 QTFIXA, 
		ISNULL((SELECT SALDOGERALFISICO FROM TPRD (NOLOCK) WHERE CODCOLIGADA = A.CODCOLIGADA AND  IDPRD = C.IDPRD),0) ESTOQUE, 'fluig',GETDATE(), 'fluig', GETDATE(),
	NULL ESTOQUETERCEIRO, NULL CODCOLCFO, NULL CODCFO, NULL CODFILIALMP, NULL CODLOCAL
	FROM (
			SELECT  CODCOLIGADA, CODIGOPRD, IDPRD, QTD,
						ISNULL((SELECT TOP 1 CODATIVIDADE FROM KATVESTRUTURA WHERE CODCOLIGADA = COMPONENTES.CODCOLIGADA AND CODESTRUTURA = COMPONENTES.CODIGOPRD COLLATE Latin1_General_CI_AS AND CODFILIAL = COMPONENTES.CODFILIAL AND PRIORIDADE = ISNULL(COMPONENTES.PRIORIDADE,PRIORIDADE) ORDER BY PRIORIDADE),
							CASE WHEN LEFT(CODIGOPRD,2) <> '03'
								THEN (SELECT TOP 1 CODATIVIDADE FROM KATVESTRUTURA (NOLOCK) WHERE CODCOLIGADA = COMPONENTES.CODCOLIGADA AND CODESTRUTURA = COMPONENTES.CODIGOPRD COLLATE Latin1_General_CI_AS AND CODFILIAL = COMPONENTES.CODFILIAL ORDER BY PRIORIDADE DESC)
								ELSE (SELECT TOP 1 CODATIVIDADE FROM KATVESTRUTURA (NOLOCK) WHERE CODCOLIGADA = COMPONENTES.CODCOLIGADA AND CODESTRUTURA = COMPONENTES.CODIGOPRD COLLATE Latin1_General_CI_AS AND CODFILIAL = COMPONENTES.CODFILIAL ORDER BY PRIORIDADE ) END
								) CODATIVIDADE,
					COMPONENTES.CODFILIAL, EXECUCAO, CODTRFPAI, NUMPROCESSO, ITEMEXCLUSIVO
			FROM (
				SELECT I.ITEMEXCLUSIVO, I.CODIGOPRD, E.IDPRD,  CAST(E.DESQTDE AS float) QTD, I.NIVEL, I.INDICE, NULL PRIORIDADE, E.CODFILIAL, I.CODCOLIGADA,I.EXECUCAO, I.CODTRFPAI, Z.NUMPROCESSO
				FROM  FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I
					INNER JOIN FLUIG.DBO.ML001004 (NOLOCK) Z ON Z.NUM_OS = I.OS
					INNER JOIN FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) E ON I.OS = E.OS AND I.INDICE = E.NIVEL  AND E.EXECUCAO = I.EXECUCAO
				WHERE E.ITEMEXCLUSIVO <> 2 AND Z.NUMPROCESSO = @NUMPROCESSO AND I.TIPODESENHO NOT IN ('NAOMANUFATURADO','INDUSTRIALIZACAO') AND COALESCE(E.ITEMDERETORNO,0)=0  AND EXISTS (SELECT C.CODATIVIDADE FROM FLUIG.dbo.Z_CRM_EX001021 (NOLOCK) C WHERE I.OS = C.OSPROCESSO AND C.IDCRIACAOPROCESSO = I.IDCRIACAO )
		
				UNION ALL
		
				SELECT I.ITEMEXCLUSIVO, I.CODIGOPRD, C.IDPRDCOMPONENTES IDPRD,  CAST(REPLACE(C.QTDEUNCOMPONENTES,',','.') AS FLOAT) QTD, I.NIVEL, I.INDICE, C.PRIORIDADEATVCOMPONENTES PRIORIDADE, I.CODFILIAL, I.CODCOLIGADA,I.EXECUCAO, I.CODTRFPAI, Z.NUMPROCESSO 
				FROM  FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I 
					INNER JOIN FLUIG.DBO.ML001004 (NOLOCK) Z ON Z.NUM_OS = I.OS
					INNER JOIN FLUIG.dbo.Z_CRM_EX001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO AND C.EXECUCAO = I.EXECUCAO
				WHERE  ISNULL(SUBSTITUTOCOMPONENTES,'') = '' AND Z.NUMPROCESSO = @NUMPROCESSO
			
				UNION ALL

					-- CODIGOS NÃO MANUFATURADO
				SELECT I.ITEMEXCLUSIVO, P.CODIGOPRD, C.IDPRDCOMPONENTES IDPRD,  CAST(REPLACE(C.QTDEUNCOMPONENTES,',','.') AS FLOAT)  QTD, I.NIVEL, I.INDICE, C.PRIORIDADEATVCOMPONENTES PRIORIDADE, I.CODFILIAL, I.CODCOLIGADA,I.EXECUCAO, I.CODTRFPAI, Z.NUMPROCESSO
				FROM  FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I
					INNER JOIN FLUIG.DBO.ML001004 (NOLOCK) Z ON Z.NUM_OS = I.OS
					INNER JOIN FLUIG.dbo.Z_CRM_EX001019 (NOLOCK) C ON I.OS = C.OSCOMPONENTES AND C.IDCRIACAOCOMPONENTES = I.IDCRIACAO  AND C.EXECUCAO = I.EXECUCAO
					INNER JOIN FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) P ON I.OS = P.OS AND I.NIVEL = P.INDICE  AND P.EXECUCAO = I.EXECUCAO
				WHERE  ISNULL(SUBSTITUTOCOMPONENTES,'') = '' AND Z.NUMPROCESSO = @NUMPROCESSO AND I.TIPODESENHO = 'NAOMANUFATURADO' 

			
			) AS COMPONENTES
			WHERE IDPRD <> ''
			AND ISNULL((SELECT TOP 1 CODATIVIDADE FROM KATVESTRUTURA (NOLOCK) WHERE CODCOLIGADA = COMPONENTES.CODCOLIGADA AND CODESTRUTURA = COMPONENTES.CODIGOPRD COLLATE Latin1_General_CI_AS AND CODFILIAL = COMPONENTES.CODFILIAL AND PRIORIDADE = ISNULL(COMPONENTES.PRIORIDADE,PRIORIDADE) ORDER BY PRIORIDADE),
							(SELECT TOP 1 CODATIVIDADE FROM KATVESTRUTURA (NOLOCK) WHERE CODCOLIGADA = COMPONENTES.CODCOLIGADA AND CODESTRUTURA = COMPONENTES.CODIGOPRD COLLATE Latin1_General_CI_AS AND CODFILIAL = COMPONENTES.CODFILIAL ORDER BY PRIORIDADE)) IS NOT NULL
			) AS C

			INNER JOIN KORDEM (NOLOCK) O  ON O.RESPONSAVEL LIKE C.CODIGOPRD+';'+C.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(C.EXECUCAO AS varchar(10))+'/'+C.CODTRFPAI COLLATE Latin1_General_CI_AS+'%'
			INNER JOIN KITEMORDEM (NOLOCK) I ON O.CODCOLIGADA = I.CODCOLIGADA AND O.CODFILIAL = I.CODFILIAL AND O.CODORDEM = I.CODORDEM
			INNER JOIN KATVORDEM (NOLOCK) A ON O.CODCOLIGADA = A.CODCOLIGADA AND O.CODFILIAL = A.CODFILIAL AND O.CODORDEM = A.CODORDEM AND C.CODATIVIDADE = A.CODATIVIDADE
			LEFT JOIN KATVORDEMMP (NOLOCK) MP ON MP.CODCOLIGADA = O.CODCOLIGADA AND MP.CODFILIAL = O.CODFILIAL AND MP.CODORDEM = O.CODORDEM AND A.IDATVORDEM = MP.IDATIVIDADE AND MP.IDPRODUTO = C.IDPRD AND MP.EFETIVADO = 0
	WHERE C.ITEMEXCLUSIVO = 0  AND MP.CODCOLIGADA IS NULL AND O.RESPONSAVEL LIKE '%;'+CAST(@NUMPROCESSO AS VARCHAR(10))+'-%';
	

	UPDATE GAUTOINC SET VALAUTOINC  = (SELECT MAX(IDATVORDEMMATERIAPRIMA) FROM KATVORDEMMP)
	WHERE CODAUTOINC = 'IDATVORDEMMATERIAPRIMA' 
	AND CODSISTEMA = 'K' 
	AND CODCOLIGADA = 0;
	
			-- CRIAR O NUMERO DE EXECUÇÃO NA KORDEMCOMPL

		INSERT INTO KORDEMCOMPL (CODCOLIGADA, CODORDEM, CODFILIAL, NUMEXEC, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
		SELECT K.CODCOLIGADA, K.CODORDEM, K.CODFILIAL, CAST( SUBSTRING (K.RESPONSAVEL, CHARINDEX('-',K.RESPONSAVEL)+1, CHARINDEX('/',K.RESPONSAVEL)-CHARINDEX('-',K.RESPONSAVEL) -1) AS int), K.RECCREATEDBY, K.RECCREATEDON, K.RECMODIFIEDBY, K.RECMODIFIEDON
		FROM KORDEM K
			LEFT JOIN KORDEMCOMPL C ON K.CODCOLIGADA = C.CODCOLIGADA AND K.CODFILIAL = C.CODFILIAL AND K.CODORDEM = C.CODORDEM
		WHERE C.CODORDEM IS NULL
		AND CHARINDEX(';',K.RESPONSAVEL) <> 0

		-- INSERIR A PRIORIDADE E A TABELA DE ATIVIDADE

		INSERT INTO KATVORDEMCOMPL (CODCOLIGADA, CODORDEM, CODESTRUTURA, CODMODELO, IDATVORDEM, CODFILIAL, CAUSADOR, NUMERORNC2, RNCRR, RETRABALHO, PRIORIDADE, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON )
	SELECT O.CODCOLIGADA, O.CODORDEM, I.CODESTRUTURA, I.CODMODELO, Z.IDATVORDEM, O.CODFILIAL, NULL CODCLIENTECAUSADOR, NULL NUMRNC,  NULL CODCLIENTERNCRR,  NULL CODCLIENTECAUSA, A.PRIORIDADE, 'fluig',getdate(),'fluig',getdate() 
	FROM KORDEM O (NOLOCK)
		INNER JOIN KITEMORDEM I (NOLOCK) ON O.CODCOLIGADA = I.CODCOLIGADA AND O.CODFILIAL = I.CODFILIAL AND O.CODORDEM = I.CODORDEM
		INNER JOIN KORDEMCOMPL C (NOLOCK) ON O.CODCOLIGADA = C.CODCOLIGADA AND O.CODFILIAL = C.CODFILIAL AND O.CODORDEM = C.CODORDEM
		INNER JOIN FLUIG.DBO.ML001004 F (NOLOCK) ON F.NUM_OS = O.CODCCUSTO COLLATE SQL_Latin1_General_CP1_CI_AI
		INNER JOIN FLUIG.DBO.Z_CRM_EX001005 M (NOLOCK) ON F.NUM_OS = M.OS AND O.RESPONSAVEL LIKE M.CODIGOPRD+';'+F.NUMPROCESSO COLLATE Latin1_General_CI_AS+'%' AND M.EXECUCAO = C.NUMEXEC
		INNER JOIN FLUIG.DBO.Z_CRM_EX001021 A (NOLOCK) ON M.OS = A.OSPROCESSO AND M.IDCRIACAO = A.IDCRIACAOPROCESSO AND A.EXECUCAO = M.EXECUCAO
		INNER JOIN KATVORDEM Z (NOLOCK) ON Z.CODCOLIGADA = O.CODCOLIGADA AND Z.CODFILIAL = O.CODFILIAL AND Z.CODORDEM = O.CODORDEM AND Z.CODATIVIDADE = A.CODATIVIDADE COLLATE SQL_Latin1_General_CP1_CI_AI
		LEFT JOIN KATVORDEMCOMPL L (NOLOCK) ON L.CODCOLIGADA = Z.CODCOLIGADA AND L.CODFILIAL = Z.CODFILIAL AND L.CODORDEM = Z.CODORDEM AND L.IDATVORDEM = Z.IDATVORDEM
	WHERE M.ITEMEXCLUSIVO = 0  AND L.IDATVORDEM IS NULL AND F.NUMPROCESSO = @NUMPROCESSO;
	

		-- DEIXA COMO ITEM NÃO EXCLUSIVO AS MLs QUE NÃO TEM ORDEM DE PRODUÇÃO
		UPDATE I SET ITEMEXCLUSIVO = CASE WHEN ITEMEXCLUSIVO = 2 THEN 2 ELSE 1 END
		FROM FLUIG.DBO.ML001004 (NOLOCK) M
			INNER JOIN FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I on  M.NUM_OS = I.OS
			INNER JOIN KITEMORDEM (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
			INNER JOIN KORDEM (NOLOCK) O ON O.RESPONSAVEL LIKE I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(I.EXECUCAO AS varchar(10))+'/'+I.CODTRFPAI+'%'
		WHERE M.NUMPROCESSO = @NUMPROCESSO 


	IF @EDICAO = 'N'
	BEGIN
			-- ATUALIZA O NUMERO DE EXECUÇÕES DA OS

		UPDATE I SET EXECINTEGRADAS = ISNULL(EXECINTEGRADAS,0) + @QTDREPATICOES
		FROM FLUIG.DBO.ML001004 (NOLOCK) M
				INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on  M.NUM_OS = I.OS
		WHERE I.NIVEL = ''
		AND		 M.NUMPROCESSO = @NUMPROCESSO AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE;

		UPDATE FLUIG.dbo.Z_CRM_EX001005 SET ITEMEXCLUSIVO = 1
		WHERE OS = @OS AND ITEMEXCLUSIVO = 0


	-- FIM DAS ALTERAÇÕES
	
	-- ####### INICIADO A INTEGRAÇÃO COM SOLUM ########
	
	-- RECRIAÇÃO DO PROJETO NO SOLUM

	-- PRIMEIRO DELETAMOS AS TAREFAS DE PRODUÇÃO
		-- SALVANDO DADOS DE PROJETO

		SELECT T.CODCOLIGADA , T.IDPRJ, LEFT(T.CODTRF,4) CODTRFPAI, T.CODTRFAUX, T.NOME, T.DESCRICAO, T.DATAINICIOCALC, T.DATAINICIOPLAN , T.DATAINICIOREAL ,
		T.DATAFIMCALC, T.DATAFIMPLAN , T.DATAFIMREAL,
		T.DURACAOCALC, T.DURACAOPLAN, T.DURACAOREAL,
		T.PERCCONCLUIDO,
		C.CELULA, C.TAG  , C.STATUS_FABRICACAO INTO #Z_CRM_LOGPRJ
		FROM MTAREFA T
			INNER JOIN MTRFCOMPL C ON T.CODCOLIGADA = C.CODCOLIGADA AND T.IDPRJ = C.IDPRJ AND T.IDTRF = C.IDTRF
		WHERE T.CODCOLIGADA = @CODCOLIGADA AND T.IDPRJ = @IDPRJ AND ISNULL(T.CODTRFAUX,'') <> ''
		ORDER BY T.CODTRF;
		

	 -- SALVAMOS AS TAREFAS SUMARIZADORAS

		SELECT CODCOLIGADA, IDPRJ, LEFT(CODTRFAUX, CHARINDEX('-',CODTRFAUX)-1) CODORDEM INTO #Z_CRM_TRFSUM
		FROM MTAREFA  (NOLOCK)
		WHERE CODCOLIGADA = @CODCOLIGADA AND IDPRJ = @IDPRJ AND CODTRFAUX LIKE '%-SUM' AND QUANTIDADE IS NULL;

	
	END

				

	DELETE D
	FROM MTAREFA K
		INNER JOIN MTRFDESC D ON D.CODCOLIGADA = K.CODCOLIGADA AND D.IDPRJ = K.IDPRJ AND D.IDTRF = K.IDTRF
	WHERE K.CODCOLIGADA = @CODCOLIGADA AND K.IDPRJ = @IDPRJ AND K.CODTRF LIKE @CODTRFPAI+'.%';
	

	DELETE D
	FROM MTAREFA K
		INNER JOIN MTRFPLAN D ON D.CODCOLIGADA = K.CODCOLIGADA AND D.IDPRJ = K.IDPRJ AND D.IDTRF = K.IDTRF
	WHERE K.CODCOLIGADA = @CODCOLIGADA AND K.IDPRJ = @IDPRJ AND K.CODTRF LIKE @CODTRFPAI+'.%';
	


	DELETE D
	FROM MTAREFA K
		INNER JOIN MTRFCOMPL D ON D.CODCOLIGADA = K.CODCOLIGADA AND D.IDPRJ = K.IDPRJ AND D.IDTRF = K.IDTRF
	WHERE K.CODCOLIGADA = @CODCOLIGADA AND K.IDPRJ = @IDPRJ AND K.CODTRF LIKE @CODTRFPAI+'.%';
	

			
	DELETE D
	FROM MTAREFA K
		INNER JOIN MTRFSUC D ON D.CODCOLIGADA = K.CODCOLIGADA AND D.IDPRJ = K.IDPRJ AND D.IDTRF = K.IDTRF
	WHERE K.CODCOLIGADA = @CODCOLIGADA AND K.IDPRJ = @IDPRJ AND K.CODTRF LIKE @CODTRFPAI+'.%';


	DELETE D
	FROM MTAREFA K
		INNER JOIN MTRFSUC D ON D.CODCOLIGADA = K.CODCOLIGADA AND D.IDPRJ = K.IDPRJ AND D.IDTRFSUC = K.IDTRF
	WHERE K.CODCOLIGADA = @CODCOLIGADA AND K.IDPRJ = @IDPRJ AND K.CODTRF LIKE @CODTRFPAI+'.%';
	

	DELETE K
	FROM MTAREFA K
	WHERE K.CODCOLIGADA = @CODCOLIGADA AND K.IDPRJ = @IDPRJ AND K.CODTRF LIKE @CODTRFPAI+'.%';


	-- REFAZ A INTEGRAÇÃO COM O SOLUM
	

		UPDATE MPARAMETRO SET VALORSTR = '#.##.###.###.###.###.###.###.###.###.###.###.###.###.###.###' 
		FROM MPARAMETRO 
		WHERE	IDPRJ = @IDPRJ 
		AND		PARAMETRO = 'MASCARATAREFA';

		SELECT @DSCEXECUCAO = I.DESCRICAO, @QTDORDEM = ISNULL(I.EXECINTEGRADAS,0)
		FROM FLUIG.DBO.ML001004 (NOLOCK) M
				INNER JOIN FLUIG.dbo.Z_CRM_ML001005 (NOLOCK) I on  M.NUM_OS = I.OS
		WHERE I.NIVEL = ''
		AND		 M.NUMPROCESSO = @NUMPROCESSO AND CASE WHEN CHARINDEX('.',I.INDICE) <> 0 THEN CAST(LEFT(I.INDICE,CHARINDEX('.',I.INDICE)-1) AS int) ELSE CAST(I.INDICE AS int) END =  @INDICE;
			   
		
		WHILE @QTDORDEM > 0
		BEGIN
				
	
				INSERT INTO MTAREFA (CODCOLIGADA, IDPRJ, IDTRF, CODTRF, CODTRFAUX, NOME, DESCRICAO, IDPAI, ATIVA, VALOR, BLOQUEADA, SERVICO, UTILIZARVALOR,IDDISCIPLINA, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
							  VALUES( 1, @IDPRJ,ISNULL((SELECT VALAUTOINC FROM GAUTOINC WHERE CODSISTEMA = 'M' AND	CODAUTOINC = 'IDTRF-'+CAST(@IDPRJ AS varchar(MAX))),0)+1,
										 @CODTRFPAI+'.'+RIGHT(REPLICATE('0',3)+CAST(@QTDORDEM AS VARCHAR(5)),3),'EXEC'+CAST(@QTDORDEM AS VARCHAR(4))+'-'+@CODTRFPAI, 
										 LEFT('FABRICAÇÃO '+CAST(@QTDORDEM AS VARCHAR(4))+' - '+@DSCEXECUCAO,90),'FABRICAÇÃO '+CAST(@QTDORDEM AS VARCHAR(4))+' - '+@DSCEXECUCAO,@IDPAI, 1,  0, 0, 0, 0, @IDDISCIPLINA, 'fluig', GETDATE(),'fluig', GETDATE() )
				

				SELECT @IDPAIEXEC = IDTRF FROM MTRF WHERE CODCOLIGADA = 1 AND IDPRJ = @IDPRJ AND CODTRF = @CODTRFPAI+'.'+RIGHT(REPLICATE('0',3)+CAST(@QTDORDEM AS VARCHAR(5)),3);

					-- ATUALIZA OS ID
				UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(IDTRF) FROM MTAREFA WHERE CODCOLIGADA = @CODCOLIGADA AND IDPRJ = @IDPRJ) WHERE CODSISTEMA = 'M' AND CODAUTOINC = 'IDTRF-'+CAST(@IDPRJ AS varchar(MAX))

			

				-- INCLUSAO DAS TAREFAS DO SOLUM
				INSERT INTO MTAREFA (CODCOLIGADA, IDPRJ, IDTRF, CODTRF, CODTRFAUX, NOME, DESCRICAO, IDPAI, ATIVA, VALOR, BLOQUEADA, SERVICO, UTILIZARVALOR,IDDISCIPLINA, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
				SELECT O.CODCOLIGADA, @IDPRJ, ROW_NUMBER() OVER (ORDER BY CAST('/' + REPLACE(I.INDICE, '.', '/') + '/' AS HIERARCHYID))+ISNULL((SELECT VALAUTOINC FROM GAUTOINC WHERE CODSISTEMA = 'M' AND	CODAUTOINC = 'IDTRF-'+CAST(@IDPRJ AS varchar(MAX))),0),
						@CODTRFPAI+'.'+RIGHT(REPLICATE('0',3)+CAST(I.EXECUCAO AS VARCHAR(5)),3)+'.'+RIGHT(REPLICATE('0',3)+ CAST(ROW_NUMBER() OVER (ORDER BY CAST('/' + REPLACE(I.INDICE, '.', '/') + '/' AS HIERARCHYID)) AS varchar(MAX)),3), 
						O.CODORDEM, LEFT(ISNULL(I.DESCRICAO,'')+' - POS. '+ISNULL(I.POSICAODESENHO,'')+' - '+ISNULL(I.NUMDESENHO,''),90), ISNULL(I.DESCRICAO,'')+' - POS. '+ISNULL(I.POSICAODESENHO,'')+' - '+ISNULL(I.NUMDESENHO,'') , @IDPAIEXEC, 1, 0, 0, 0, 0,@IDDISCIPLINA, 'fluig', GETDATE(),'fluig', GETDATE() 
				 FROM FLUIG.DBO.ML001004 (NOLOCK) M
					INNER JOIN FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I on  M.NUM_OS = I.OS
					INNER JOIN KITEMORDEM (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
					INNER JOIN KORDEM (NOLOCK) O ON K.CODCOLIGADA = O.CODCOLIGADA AND K.CODFILIAL = O.CODFILIAL AND K.CODORDEM = O.CODORDEM AND O.RESPONSAVEL like I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(I.EXECUCAO AS VARCHAR(MAX))+'/'+@CODTRFPAI+'%'
				WHERE M.NUMPROCESSO = @NUMPROCESSO
				AND I.CODTRFPAI = @CODTRFPAI
				AND I.EXECUCAO = @QTDORDEM
				AND O.STATUS <> 6
				AND I.ITEMEXCLUSIVO <> 2
				ORDER BY CAST('/' + REPLACE(I.INDICE, '.', '/') + '/' AS HIERARCHYID)
			
				-- ATUALIZA OS ID
				UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(IDTRF) FROM MTAREFA WHERE CODCOLIGADA = 1 AND IDPRJ = @IDPRJ) WHERE CODSISTEMA = 'M' AND CODAUTOINC = 'IDTRF-'+CAST(@IDPRJ AS varchar(MAX))

				-- TAREFAS DAS ATIVIDADES DAS ORDENS DE PRODUÇÃO

				SET @QTDORDEM -= 1;

		END --IF DO WHILE
		
		-- TERMINA A REPETIÇÃO DAS QUANTIDADES DE EXECUÇÃO
		-- EXECUTAR UMA VEZ SÓ PARA GANHAR PERFORMASSE NA PROCEDURE
					
		-- TORNADO AS ATIVIDADES DAS ORDEM DE PRODUÇÃO COMO ATIVIDADES
		-- CRIA O REGISTRO DA COMPL
		
	
			INSERT INTO MTRFCOMPL (CODCOLIGADA, IDPRJ, IDTRF, NUMFLUIG,  RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
			SELECT T.CODCOLIGADA, T.IDPRJ, T.IDTRF, @NUMPROCESSO,  T.RECCREATEDBY, T.RECCREATEDON, T.RECMODIFIEDBY, T.RECMODIFIEDON
			FROM MTAREFA (NOLOCK) T
				LEFT JOIN MTRFCOMPL (NOLOCK) C ON T.CODCOLIGADA = C.CODCOLIGADA AND T.IDPRJ = C.IDPRJ AND T.IDTRF = C.IDTRF
			WHERE C.IDPRJ IS NULL
			AND T.IDPRJ = @IDPRJ
			AND		T.CODCOLIGADA = @CODCOLIGADA;
		

	
		UPDATE P SET  QUANTIDADE = (SELECT SUM(ROUND((ISNULL(FILA,0)+ISNULL(CONFIGURACAO,0)+ISNULL(PROCESSA,0)+ISNULL(DESAGREGACAO,0)+ISNULL(ESPERA,0)+ISNULL(MOVIMENTACAO,0))/60,2)*K.QTDEPLANEJADA)
									FROM KITEMORDEM (NOLOCK) K
										INNER JOIN KATVESTRUTURA (NOLOCK) A ON A.CODCOLIGADA = K.CODCOLIGADA AND A.CODESTRUTURA = K.CODESTRUTURA AND A.CODFILIAL = K.CODFILIAL
									WHERE K.CODCOLIGADA = P.CODCOLIGADA AND K.CODFILIAL = M.CODFILIAL AND K.CODORDEM = P.CODTRFAUX ) ,
				CODUND = 'H' , SERVICO = 1, BDI = 1, UTILIZARVALOR = 1, BLOQUEADA = NULL, SUBOBRA = 0
		FROM MTAREFA (NOLOCK) P 
			INNER JOIN MPRJ (NOLOCK) M ON M.CODCOLIGADA = P.CODCOLIGADA AND M.IDPRJ = P.IDPRJ
		WHERE P.IDPRJ =  @IDPRJ AND P.CODTRF LIKE @CODTRFPAI+'%' AND LEN(P.CODTRF) = 12
		AND		P.CODCOLIGADA = @CODCOLIGADA



			UPDATE C SET C.NUMFLUIG = M.NUMPROCESSO, C.NIVEL =  RIGHT(REPLICATE('0',3)+CAST(LEN(I.INDICE)-LEN(REPLACE(I.INDICE,'.','')) AS varchar(3)),3) , 
						C.INDICE = CASE WHEN I.COMPORLISTA = 'SIM' THEN 'P' ELSE 'S' END, C.CELULA = CASE WHEN I.COMPORLISTA = 'SIM' THEN '09' END
			FROM FLUIG.DBO.ML001004 (NOLOCK) M
				INNER JOIN FLUIG.dbo.Z_CRM_EX001005 (NOLOCK) I on  M.NUM_OS = I.OS
				INNER JOIN KITEMORDEM (NOLOCK) K ON K.CODCOLIGADA = I.CODCOLIGADA AND K.CODFILIAL = I.CODFILIAL AND K.CODESTRUTURA = I.CODIGOPRD COLLATE SQL_Latin1_General_CP1_CI_AI
				INNER JOIN KORDEM (NOLOCK) O ON K.CODCOLIGADA = O.CODCOLIGADA AND K.CODFILIAL = O.CODFILIAL AND K.CODORDEM = O.CODORDEM AND O.RESPONSAVEL LIKE I.CODIGOPRD+';'+M.NUMPROCESSO COLLATE Latin1_General_CI_AS+'-'+CAST(I.EXECUCAO AS VARCHAR(MAX))+'/%'
				INNER JOIN MTRF (NOLOCK) T ON O.CODCOLIGADA = T.CODCOLIGADA AND T.IDPRJ = M.IDPRJ_OS AND T.CODTRFAUX = O.CODORDEM
				INNER JOIN MTRFCOMPL (NOLOCK) C ON T.CODCOLIGADA = C.CODCOLIGADA AND T.IDPRJ = C.IDPRJ AND T.IDTRF = C.IDTRF
			WHERE M.NUMPROCESSO = @NUMPROCESSO;
			
		
				-- ATUALIZA O NIVEL DE ORDEM DE PRODUÇÃO
				UPDATE MTAREFA SET MTAREFA.DURACAOCALC = CASE WHEN  (MTAREFA.QUANTIDADE/8)  - FLOOR(MTAREFA.QUANTIDADE/8)  <> 0.00000 THEN FLOOR(MTAREFA.QUANTIDADE/8)+1 ELSE FLOOR(MTAREFA.QUANTIDADE/8) END,
								MTAREFA.PROGRAMADA = 1 , MTAREFA.DATAINICIOPLAN = @DATAINICIAL, MTAREFA.DATAFIMPLAN = @DATAINICIAL, 
								MTAREFA.DATAINICIOCALC = @DATAINICIAL, MTAREFA.DATAFIMCALC = @DATAINICIAL
				FROM MTAREFA 
				WHERE  IDPRJ =  @IDPRJ AND CODTRF LIKE @CODTRFPAI+'%' AND LEN(CODTRF) = 12  AND CODCOLIGADA = @CODCOLIGADA;
				
				
				-- ATUALIZA O NIVEL DE QTD DE REPETIÇÕES
		

				UPDATE M SET M.DURACAOCALC = (SELECT SUM(DURACAOCALC) FROM MTRF A WHERE A.IDPRJ = M.IDPRJ AND A.IDPAI = M.IDTRF), M.DURACAOPLAN = (SELECT SUM(DURACAOPLAN) FROM MTRF A WHERE A.IDPRJ = M.IDPRJ AND A.IDPAI = M.IDTRF), PROGRAMADA = 1 , M.DATAINICIOPLAN = @DATAINICIAL, M.DATAFIMPLAN = @DATAINICIAL, M.DATAINICIOCALC = @DATAINICIAL, M.DATAFIMCALC = @DATAINICIAL
				FROM MTRF M
				WHERE IDPRJ = @IDPRJ AND CODTRF LIKE @CODTRFPAI+'%' AND LEN(CODTRF) = 8  AND CODCOLIGADA = @CODCOLIGADA; 

							
				-- ATUALIZA O NIVEL DE FABRICAÇÃO
			

				UPDATE M SET M.DURACAOCALC = (SELECT SUM(DURACAOCALC) FROM MTRF A WHERE A.IDPRJ = M.IDPRJ AND A.IDPAI = M.IDTRF), M.DURACAOPLAN = (SELECT SUM(DURACAOPLAN) FROM MTRF A WHERE A.IDPRJ = M.IDPRJ AND A.IDPAI = M.IDTRF), PROGRAMADA = 1 , M.DATAINICIOPLAN = @DATAINICIAL, M.DATAFIMPLAN = @DATAINICIAL, M.DATAINICIOCALC = @DATAINICIAL, M.DATAFIMCALC = @DATAINICIAL
				FROM MTRF M
				WHERE IDPRJ = @IDPRJ AND CODTRF LIKE @CODTRFPAI+'%' AND LEN(CODTRF) =4  AND CODCOLIGADA = @CODCOLIGADA;

		-- FIM DA ATUALIZA 1 VEZ SÓ TODAS AS ATIVIDADES DO CRONOGRAMA
		
		
		-- ATUALIZAÇÃO DATA FINAL PARA CORRETO CALCULO DO SOLUM
		UPDATE M SET DATAFIMCALC = DATAINICIOCALC+DURACAOCALC
		FROM MTRF M
		WHERE IDPRJ = @IDPRJ AND CODTRF LIKE @CODTRFPAI+'%'  AND CODCOLIGADA = @CODCOLIGADA;

		
		-- RECRIANDO AS TAREFAS SUMARIZADORAS
	IF @EDICAO = 'N'
	BEGIN
		-- SALVAMOS AS TAREFAS SUMARIZADORAS
		DECLARE @IDTRF_SUM INT;

		 DECLARE SUMARIZACAO CURSOR FOR  SELECT IDTRF 
										  FROM #Z_CRM_TRFSUM Z
											INNER JOIN MTAREFA (NOLOCK) M ON Z.CODCOLIGADA = M.CODCOLIGADA 
																		 AND Z.IDPRJ = M.IDPRJ 
																		 AND Z.CODORDEM = M.CODTRFAUX;

		OPEN SUMARIZACAO;

		FETCH NEXT FROM SUMARIZACAO INTO @IDTRF_SUM;

		WHILE @@FETCH_STATUS = 0
		BEGIN

			EXEC SP_CRM_CRIATRFSUMARIZADORA @CODCOLIGADA , @IDPRJ , @IDTRF_SUM;
			
			FETCH NEXT FROM SUMARIZACAO INTO @IDTRF_SUM;

		END;

		CLOSE SUMARIZACAO;
		DEALLOCATE SUMARIZACAO;

		-- RECRIANDO AS ORDENS DE RETRABALHO

	DECLARE @CODTRF_NEW VARCHAR(50), @PROCESSO INT, @CODTRF VARCHAR(MAX);

	DECLARE FLUIG26 CURSOR FOR SELECT M.NUMPROCESSO
								FROM FLUIG.dbo.ML001026 M (NOLOCK)
									INNER JOIN FLUIG.DBO.ML001004 I (NOLOCK) ON M.NUM_OS = I.NUM_OS
								WHERE I.NUM_OS = @OS AND CASE WHEN CHARINDEX('.', M.F_INDICE) <> 0 THEN CAST(LEFT(M.F_INDICE,CHARINDEX('.', M.F_INDICE)-1) AS int) ELSE CAST( M.F_INDICE AS int) END =  @INDICE
 
	OPEN FLUIG26;

	FETCH NEXT FROM FLUIG26 INTO @PROCESSO;

	WHILE @@FETCH_STATUS = 0
	BEGIN

		DECLARE RETRABALHO CURSOR FOR 		SELECT   P.IDPRJ,  T.IDPAI,  T.CODTRF,  LEFT(T.CODTRF,LEN(T.CODTRF)-3) + RIGHT(REPLICATE('0',3)+CAST(CAST(RIGHT(T.CODTRF,3) AS int)+1 AS varchar(4)),3)
											FROM FLUIG.dbo.ML001026 M (NOLOCK)
												INNER JOIN MPRJ P (NOLOCK) ON P.CODPRJ = M.NUM_OS COLLATE Latin1_General_CI_AS AND P.POSICAO IN (1,4)
												INNER JOIN MTRF T (NOLOCK) ON P.CODCOLIGADA = T.CODCOLIGADA AND P.IDPRJ = T.IDPRJ AND T.CODTRFAUX = M.CODORDEM COLLATE Latin1_General_CI_AS
											WHERE M.NUMPROCESSO = @PROCESSO
											AND	  M.EXCLUSIVO1 = 'FINALIZAR';

		OPEN RETRABALHO;

		FETCH NEXT FROM RETRABALHO INTO @IDPRJ, @IDPAI, @CODTRF, @CODTRF_NEW;

		WHILE @@FETCH_STATUS = 0
		BEGIN

		UPDATE MTRF SET CODTRF = LEFT(CODTRF,LEN(CODTRF)-3) + RIGHT(REPLICATE('0',3)+CAST(CAST(RIGHT(CODTRF,3) AS int)+1 AS varchar(4)),3)
		WHERE IDPRJ = @IDPRJ AND IDPAI = @IDPAI AND CODTRF > @CODTRF
	

		INSERT INTO MTAREFA (CODCOLIGADA, IDPRJ, IDTRF, CODTRF, CODTRFAUX, NOME, DESCRICAO, IDPAI, QUANTIDADE, CODUND, ATIVA, VALOR, BLOQUEADA, SERVICO, BDI, UTILIZARVALOR, INDIRETO, IDDISCIPLINA, RECCREATEDBY, RECCREATEDON, RECMODIFIEDBY, RECMODIFIEDON)
		SELECT O.CODCOLIGADA, @IDPRJ, ROW_NUMBER() OVER (ORDER BY O.CODORDEM DESC)+ISNULL((SELECT VALAUTOINC FROM GAUTOINC WHERE CODSISTEMA = 'M' AND	CODAUTOINC = 'IDTRF-'+CAST(@IDPRJ AS varchar(MAX))),0),
				@CODTRF_NEW, O.CODORDEM, 'RETRABALHO: ' + I.F_DESCRICAO+ ' - POS. '+I.F_POSICAODESENHO, 'RETRABALHO: ' + I.F_DESCRICAO+ ' - POS. '+I.F_POSICAODESENHO , @IDPAI, 
					((SELECT SUM( CAST(ISNULL(A.VIEWMINUTOSGASTOS,0) AS FLOAT)) FROM FLUIG.DBO.ML001028 A (NOLOCK) WHERE I.DOCUMENTID = A.DOCUMENTID AND I.VERSION = A.VERSION)*CAST(I.F_DESQTDE AS FLOAT))/60.00, 
				'H', 1, 0, 0, 1,1,1,1, @IDDISCIPLINA, 'fluig', GETDATE(),'fluig', GETDATE() 
		FROM FLUIG.DBO.ML001026 (NOLOCK) I
			INNER JOIN KORDEM (NOLOCK) O ON O.RESPONSAVEL = I.F_CODIGOPRD+';'+I.NUMPROCESSO COLLATE Latin1_General_CI_AS+'- RETRABALHO'
		WHERE I.NUMPROCESSO = @PROCESSO


		UPDATE GAUTOINC SET VALAUTOINC = (SELECT MAX(IDTRF) FROM MTAREFA WHERE CODCOLIGADA = 1 AND IDPRJ = @IDPRJ) WHERE CODSISTEMA = 'M' AND CODAUTOINC = 'IDTRF-'+CAST(@IDPRJ AS varchar(MAX))


		FETCH NEXT FROM RETRABALHO INTO @IDPRJ, @IDPAI, @CODTRF, @CODTRF_NEW;
		END;

		CLOSE RETRABALHO;
		DEALLOCATE RETRABALHO;

		FETCH NEXT FROM FLUIG26 INTO @PROCESSO;

	END

	CLOSE FLUIG26
	DEALLOCATE FLUIG26

		
-- FIM DA CRIAÇÃO DOS RETRABALHOS

-- TERMINA DE CRIAR

			-- RESTAURANDO INFORMAÇÕES DO PROJETOS

		UPDATE T SET	
				T.NOME = CASE WHEN T.CODTRFAUX LIKE '%-SUM' THEN Z.NOME ELSE CASE WHEN T.CODTRFAUX LIKE 'EXEC%' THEN Z.NOME ELSE T.NOME END END, 
				T.DESCRICAO = CASE WHEN T.CODTRFAUX LIKE '%-SUM' THEN Z.DESCRICAO ELSE CASE WHEN T.CODTRFAUX LIKE 'EXEC%' THEN Z.DESCRICAO ELSE T.DESCRICAO END END, 
				T.DATAINICIOCALC = Z.DATAINICIOCALC, T.DATAINICIOPLAN = Z.DATAINICIOPLAN , T.DATAINICIOREAL = Z.DATAINICIOREAL ,
				T.DATAFIMCALC = Z.DATAFIMCALC, T.DATAFIMPLAN = Z.DATAFIMPLAN , T.DATAFIMREAL = Z.DATAFIMREAL,
				T.DURACAOCALC = Z.DURACAOCALC, T.DURACAOPLAN = Z.DURACAOPLAN, T.DURACAOREAL = Z.DURACAOREAL,
				T.PERCCONCLUIDO = Z.PERCCONCLUIDO
		FROM #Z_CRM_LOGPRJ  Z
			INNER JOIN MTAREFA (NOLOCK) T ON T.CODCOLIGADA = Z.CODCOLIGADA AND T.IDPRJ = Z.IDPRJ AND T.CODTRFAUX = Z.CODTRFAUX 
		
		
		UPDATE C SET
				C.CELULA = Z.CELULA, C.TAG = Z.TAG, C.STATUS_FABRICACAO = Z.STATUS_FABRICACAO
		FROM #Z_CRM_LOGPRJ Z
			INNER JOIN MTAREFA (NOLOCK) T ON T.CODCOLIGADA = Z.CODCOLIGADA AND T.IDPRJ = Z.IDPRJ AND T.CODTRFAUX = Z.CODTRFAUX 
			INNER JOIN MTRFCOMPL (NOLOCK) C ON T.CODCOLIGADA = C.CODCOLIGADA AND T.IDPRJ = C.IDPRJ AND T.IDTRF = C.IDTRF

	
		-- FIM DAS RESTAURAÇÕES
	END;


END;
